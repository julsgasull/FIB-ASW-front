{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ask-only/ask-only.component.ts","webpack:///src/app/ask-only/ask-only.component.html","webpack:///src/app/contribution-info/contribution-info.component.ts","webpack:///src/app/contribution-info/contribution-info.component.html","webpack:///src/app/core/auth.service.ts","webpack:///src/app/core/user.model.ts","webpack:///src/app/core/user.service.ts","webpack:///src/app/models/contribution.model.ts","webpack:///src/app/newest/newest.component.ts","webpack:///src/app/newest/newest.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/pipes/date-ago.pipe.ts","webpack:///src/app/reply/reply.component.ts","webpack:///src/app/reply/reply.component.html","webpack:///src/app/services/contribution/contribution.remote.ts","webpack:///src/app/services/contribution/contribution.service.ts","webpack:///src/app/services/user/user.remote.ts","webpack:///src/app/services/user/user.service.ts","webpack:///src/app/submit/submit.component.ts","webpack:///src/app/submit/submit.component.html","webpack:///src/app/submitted/submitted.component.ts","webpack:///src/app/submitted/submitted.component.html","webpack:///src/app/threads/threads.component.ts","webpack:///src/app/threads/threads.component.html","webpack:///src/app/upvoted-comments/upvoted-comments.component.ts","webpack:///src/app/upvoted-comments/upvoted-comments.component.html","webpack:///src/app/upvoted-submissions/upvoted-submissions.component.ts","webpack:///src/app/upvoted-submissions/upvoted-submissions.component.html","webpack:///src/app/user-info/user-info.component.ts","webpack:///src/app/user-info/user-info.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","AskOnlyComponent","route","contributionService","authService","userService","firebaseUserService","userInfo","logged","email","localStorage","getItem","console","log","getByEmail","subscribe","response","getAskRelatedToUser","contributions","getAskOnly","contribution_id","voteContribution","api_key","location","reload","unvoteContribution","confirm","deleteContribution","navigate","useremail","doGoogleAuth","res","setItem","additionalUserInfo","profile","err","doLogout","getCurrentUser","redirectToNews","redirectToNewest","redirectToAskOnly","ContributionInfoComponent","activatedRoute","formBuilder","loggedUser","contribution","isSubmitted","parseInt","snapshot","paramMap","get","getContributionByIdRelatedToUser","getContributionById","commentForm","group","comment","valid","addComment","createCommentForm","redirectToContributionInfo","alert","commentFormValue","JSON","parse","stringify","value","content","nav","controls","redirectToUserInfo","AuthService","afAuth","reject","provider","GoogleAuthProvider","addScope","signInWithPopup","currentUser","signOut","providedIn","FirebaseUserModel","name","created_at","Date","updated_at","google_token","google_refresh_token","about","karma","FirebaseUserService","db","user","onAuthStateChanged","updateProfile","displayName","photoURL","Contribution","url","user_id","username","comments","numcomments","vote","c_type","isvoted","NewestComponent","getNewestRelatedToUser","getNewest","NewsComponent","getContributionsRelatedToUser","getContributions","DateAgoPipe","args","seconds","Math","floor","intervals","counter","i","pure","ReplyComponent","contributionGodfather","getGodfather","replyComment","ContributionRemote","httpClient","options","headers","set","API_URL","requested_user_id","logged_user_id","post","comment_id","reply","put","ContributionService","contributionRemote","getSubmitted","getSubmittedRelatedToUser","getUpvotedSubmissions","getUpvotedSubmissionsRelatedToUser","getThreads","getThreadsRelatedToUser","getUpvotedComments","getUpvotedCommentsRelatedToUser","isVoted","createContribution","UserRemote","UserService","userRemote","getById","updateUser","SubmitComponent","urlAndContent","niUrlNiContent","redirectToLogin","contributionForm","required","minLength","contributionFormValue","createContributionForm","onSubmit","SubmittedComponent","requestedUser","sameUser","ThreadsComponent","numContributions","length","UpvotedCommentsComponent","UpvotedSubmissionsComponent","UserInfoComponent","router","userForm","createUserForm","redirectToSubmitted","redirectToThreads","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewsComponent } from './news/news.component';\nimport { NewestComponent } from './newest/newest.component';\nimport { ThreadsComponent } from './threads/threads.component';\nimport { AskOnlyComponent } from './ask-only/ask-only.component';\nimport { SubmitComponent } from './submit/submit.component';\nimport { SubmittedComponent } from './submitted/submitted.component';\nimport { UpvotedCommentsComponent } from './upvoted-comments/upvoted-comments.component';\nimport { UpvotedSubmissionsComponent } from './upvoted-submissions/upvoted-submissions.component';\nimport { ContributionInfoComponent } from './contribution-info/contribution-info.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { ReplyComponent } from './reply/reply.component';\n\nconst routes: Routes = [\n  { path: '',                             component: NewsComponent,               },\n  { path: 'news',                         component: NewsComponent,               },\n  { path: 'newest',                       component: NewestComponent,             },\n  { path: 'askonly',                      component: AskOnlyComponent             },\n  { path: 'submit',                       component: SubmitComponent              },\n  { path: 'submitted/:email',             component: SubmittedComponent           },\n  { path: 'threads/:email',               component: ThreadsComponent,            },\n  { path: 'upvotedsubmissions',           component: UpvotedSubmissionsComponent  },\n  { path: 'upvotedcomments',              component: UpvotedCommentsComponent     },\n  { path: 'userinfo/:email',              component: UserInfoComponent            },\n  { path: 'contributioninfo/:id',         component: ContributionInfoComponent    },\n  { path: 'reply/:id',                    component: ReplyComponent               },\n\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      routes\n    )\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'HackerNews';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NewsComponent } from './news/news.component';\nimport { NewestComponent } from './newest/newest.component';\nimport { ThreadsComponent } from './threads/threads.component';\nimport { AskOnlyComponent } from './ask-only/ask-only.component';\nimport { SubmitComponent } from './submit/submit.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DateAgoPipe } from './pipes/date-ago.pipe';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { ContributionService } from './services/contribution/contribution.service';\nimport { ContributionRemote } from './services/contribution/contribution.remote';\nimport { UserRemote } from './services/user/user.remote';\nimport { UserService } from './services/user/user.service';\nimport { SubmittedComponent } from './submitted/submitted.component';\nimport { UpvotedSubmissionsComponent } from './upvoted-submissions/upvoted-submissions.component';\nimport { UpvotedCommentsComponent } from './upvoted-comments/upvoted-comments.component';\nimport { ContributionInfoComponent } from './contribution-info/contribution-info.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { ReplyComponent } from './reply/reply.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewsComponent,\n    NewestComponent,\n    ThreadsComponent,\n    AskOnlyComponent,\n    SubmitComponent,\n    DateAgoPipe,\n    SubmittedComponent,\n    UpvotedSubmissionsComponent,\n    UpvotedCommentsComponent,\n    ContributionInfoComponent,\n    UserInfoComponent,\n    ReplyComponent,\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    ContributionRemote,\n    ContributionService,\n    UserRemote,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-ask-only',\n  templateUrl: './ask-only.component.html',\n  styleUrls: ['./ask-only.component.css']\n})\nexport class AskOnlyComponent implements OnInit {\n\n  public userInfo:          FirebaseUserModel = new FirebaseUserModel();\n  public contributions:     Contribution[];\n  public logged:            boolean           = false;\n\n constructor (\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n    private firebaseUserService:  FirebaseUserService\n  ) { this.userInfo.email = localStorage.getItem('loggedUserEmail'); }\n\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.userInfo.email != \"\") {\n      this.logged = true;   console.log(\"logged user:\", this.userInfo.email); \n      // get user\n      this.userService.getByEmail(this.userInfo.email).subscribe((response:FirebaseUserModel) => {\n        this.userInfo = response;\n        this.contributionService.getAskRelatedToUser(this.userInfo.id).subscribe((response: Contribution[]) => {\n          this.contributions = response; \n          console.log(\"contribucions related to user\", this.userInfo.email, \":\", this.contributions);\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;    console.log(\"no logged user\"); \n      this.contributionService.getAskOnly().subscribe((response: Array<Contribution[]>) => {\n        this.contributions = response[0]; \n        console.log(\"contribucions with no user:\", this.contributions);\n      })\n    }\n  }\n\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.userInfo.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.route.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  \n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n}\n","<div class=\"container\" >\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(userInfo.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" style=\"color: #FFFFFF;\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i;\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n        <span *ngIf=\"logged; else notLoggedVote\">\n          <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n            <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>\n          <ng-template #notVoted>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>          \n          </ng-template>\n        </span>\n        <ng-template #notLoggedVote>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n          </span> \n        </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">Ask HN: {{contribution.title}}</a>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comment(s)</a> \n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==userInfo.name\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.interface';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { By } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-contribution-info',\n  templateUrl: './contribution-info.component.html',\n  styleUrls: ['./contribution-info.component.css']\n})\nexport class ContributionInfoComponent implements OnInit {\n\n  public loggedUser:        FirebaseUserModel = new FirebaseUserModel();\n  public contribution:      Contribution      = new Contribution();\n  public logged:            boolean           = false;\n  public isSubmitted:       boolean           = false;\n  public commentForm:        FormGroup;\n\n  constructor(\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private activatedRoute:       ActivatedRoute,\n    private userService:          UserService,\n    private formBuilder:          FormBuilder,\n    private firebaseUserService:  FirebaseUserService\n  ) { \n    this.loggedUser.email = localStorage.getItem('loggedUserEmail'); \n    this.contribution.id = parseInt(this.activatedRoute.snapshot.paramMap.get(\"id\"), 10); \n    console.log(\"info about\", this.contribution.id);\n  }\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.loggedUser.email != \"\") {\n      this.logged = true;\n      // get user\n      this.userService.getByEmail(this.loggedUser.email).subscribe((response:FirebaseUserModel) => {\n        this.loggedUser = response;\n        this.contributionService.getContributionByIdRelatedToUser(this.contribution.id, this.loggedUser.id).subscribe((response: Contribution) => {\n          this.contribution = response;\n          console.log(\"contribution\", this.contribution);\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;\n      this.contributionService.getContributionById(this.contribution.id).subscribe((response: Contribution) => {\n        this.contribution = response;\n        console.log(\"contribution\", this.contribution);\n      })\n    }\n\n    //form\n    this.commentForm = this.formBuilder.group({comment:['', ] });\n  }\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.commentForm.valid) {\n      this.contributionService.addComment(this.contribution.id, this.createCommentForm(), this.loggedUser.api_key).subscribe((response: Contribution) => {\n        this.redirectToContributionInfo(this.contribution.id);\n      })\n    } else {\n      alert(\"your commnent could not be created, try again.\")\n    }\n  }\n\n  private createCommentForm(): Contribution {\n    const commentFormValue = JSON.parse(JSON.stringify(this.commentForm.value));\n    var comment: Contribution = new Contribution();\n    comment.content           = commentFormValue.comment;\n    console.log(\"mycomment\", comment);\n    return comment;\n  }\n\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.loggedUser.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { \n    this.route.navigate(['/contributioninfo', id]).then(\n      nav => { location.reload()}, err => {\n    });\n  }\n  redirectToReply(id: number)                     { this.route.navigate(['/reply', id])                         }\n\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n\n  get formControls() { return this.commentForm.controls; }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(loggedUser.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row content\">\n    <div class=\"col-12\">\n      <div class=\"row\" style=\"color:#F6F6F0;\">.</div>\n      <div class=\"row contributioninfo\">\n        <div class=\"col-1 vote\">\n          <span *ngIf=\"logged; else notLoggedVote\">\n            <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n              <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>\n            <ng-template #notVoted>\n              <span class=\"imageClass vote\">\n                <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n              </span>          \n            </ng-template>\n          </span>\n          <ng-template #notLoggedVote>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n            </span> \n          </ng-template>\n        </div>\n        <div class=\"col contributioninfo\">\n          <div class=\"row contributiontitle\">\n            <a *ngIf=\"contribution.c_type == &quot;ask&quot;; else notAsk\" href=\"{{contribution.url}}\">Ask HN: {{contribution.title}}</a>\n            <ng-template #notAsk>\n              <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n            </ng-template>\n            <span *ngIf=\"contribution.c_type == &quot;url&quot;\">\n              <a (click)=\"redirectToNews()\">\n                <span class=\"sitestr\">\n                  &nbsp;({{ (contribution.url.length>30)? (contribution.url | slice:0:30)+'...':(contribution.url) }})\n                </span>\n              </a>\n            </span>\n          </div>\n          <div class=\"row contributiondetails\">\n            <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n            <div class=\"col contributiondetailsitem\">&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">by</div>\n            <div class=\"col contributiondetailsitem\">&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n            </div>\n            <div class=\"col contributiondetailsitem\">&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n                {{contribution.created_at | dateAgo}}\n              </a>\n            </div>\n            <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n            <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n            <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comments</a> <!-- falta nombre de comentaris -->\n            </div>\n            <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==loggedUser.name\">  <!-- and no té fills -->\n              &nbsp;|&nbsp;\n              <a (click)=\"delete(contribution.id)\">delete</a>\n            </div>\n          </div>\n          <div *ngIf=\"contribution.content.length>0\" class=\"row contributioncontent\">\n            {{contribution.content}}\n          </div>\n        </div>\n      </div>\n      <div class=\"row commentbox\" *ngIf=\"logged\">\n        <form [formGroup]=\"commentForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">.</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\">\n              <textarea\n              style=\"border-radius:2em;\"\n              type=\"textarea\" \n              class=\"form-control\" \n              id=\"comment\" \n              formControlName=\"comment\"\n              placeholder= \"leave your comment here\"\n              name=\"comment\"\n              ></textarea>\n            </div>\n          </div>\n          <div class=\"row\" *ngIf=\"logged\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\">\n              <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">comment</button>  <!-- <%if (logged_in?) && current_user.id == @user.id %> -->        \n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">\n              Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"row\" style=\"color:#F6F6F0;\">.</div>\n      <div class=\"row comments\">\n        <ul *ngIf=\"contribution.numcomments > 0\">\n          <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: contribution.comments }\"></ng-container>\n        </ul>\n        <ng-template #recursiveListTmpl let-list=\"list\">\n          <li *ngFor=\"let comment of list\" class=\"commentlist\">\n            <div class=\"row commentinfo\">\n              <div class=\"col-1 vote\">\n                <span *ngIf=\"logged; else notLoggedVote\">\n                  <span class=\"imageClass vote\"  *ngIf=\"comment.isvoted; else notVoted\" >\n                    <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(comment.id)\" style=\"height:10px; width:10px;\">\n                  </span>\n                  <ng-template #notVoted>\n                    <span class=\"imageClass vote\">\n                      <img src=\"../../assets/images/upvote.png\" (click)=\"vote(comment.id)\" style=\"height:10px; width:10px;\">\n                    </span>          \n                  </ng-template>\n                </span>\n                <ng-template #notLoggedVote>\n                  <span class=\"imageClass vote\">\n                    <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n                  </span> \n                </ng-template>\n              </div>\n              <div class=\"col commentinfo\">\n                <div class=\"row commentdetails\">\n                  <div class=\"col commentdetailsitem\">\n                    <a (click)=\"redirectToUserInfo(comment.useremail)\">{{comment.username}}</a>\n                  </div>\n                  <div class=\"col commentdetailsitem\">&nbsp;</div>\n                  <div class=\"col commentdetailsitem\">\n                    <a class=\"age\" (click)=\"redirectToContributionInfo(comment.id)\">\n                      {{comment.created_at | dateAgo}}\n                    </a>\n                  </div>\n                </div>\n                <div class=\"row commentcontent\">\n                  <div class=\"col\">\n                    {{comment.content}}\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div *ngIf=\"logged; else notLoggedReply\" class=\"col-2 reply\">\n                    <u (click)=\"redirectToReply(comment.id)\">reply</u>\n                  </div>\n                  <ng-template #notLoggedReply>\n                    <div class=\"col-2 reply\">\n                      <u (click)=\"redirectToLogin()\">reply</u>\n                    </div>\n                  </ng-template>\n                  <div class=\"col-10\" style=\"color:#F6F6F0\">\n                    Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ul *ngIf=\"comment.numcomments > 0\" class=\"commentlist\">\n              <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: comment.comments }\"></ng-container>\n            </ul>\n          </li>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n    \n  constructor (\n    public afAuth: AngularFireAuth\n  ) {}\n\n  doGoogleAuth() {\n    console.log(\"reached google auth\")\n    return new Promise<any>((resolve, reject) => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      firebase.auth()\n      .signInWithPopup(provider)\n      .then (\n        res => {\n          resolve(res);\n          console.log(\"made login\", res);\n        }, err => {\n          console.log(\"not login\", err);\n          reject(err);\n\n        }\n      )\n    })\n  }\n\n  doLogout() {\n    return new Promise((resolve, reject) => {\n      if (firebase.auth().currentUser) {\n        firebase.auth().signOut()\n        resolve();\n      } else reject();\n    });\n  }\n}","export class FirebaseUserModel {\n  name:     string;\n  email:    string;\n  provider: string;\n\n  // new\n  id:                    number;\n  created_at:            Date;\n  updated_at:            Date;\n  google_token:          string;\n  google_refresh_token:  string;\n  about:                 string;\n  api_key:               string;\n  karma:                 number;\n\n  constructor() {\n    this.name     = \"\";\n    this.email    = \"\";\n    this.provider = \"\";\n\n    // new\n    this.id                   = 0;\n    this.created_at           = new Date();\n    this.updated_at           = new Date();\n    this.google_token         = \"\";\n    this.google_refresh_token = \"\";\n    this.about                = \"\";\n    this.api_key              = \"\";\n    this.karma                = 0;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseUserService {\n\n  constructor (\n    public db: AngularFirestore,\n    public afAuth: AngularFireAuth\n  ) {}\n  \n  getCurrentUser() {\n    return new Promise<any>((resolve, reject) => {\n      var user = firebase.auth().onAuthStateChanged(\n        function(user) {\n          if (user) resolve(user);\n          else      reject('No user logged in');\n        }\n      )\n    })\n  }\n\n  updateCurrentUser(value) {\n    return new Promise<any>((resolve, reject) => {\n      var user = firebase.auth().currentUser;\n      user.updateProfile({\n        displayName: value.name,\n        photoURL: user.photoURL\n      }).then (\n        res => { resolve(res) }, \n        err => reject(err)\n      )\n    })\n  }\n}","export class Contribution {\n  id?:               number;\n  title?:           string;\n  url?:             string;\n  content?:         string;\n  contribution_id?: number;\n  user_id:          number;\n  username?:        string;\n  useremail?:       string;\n  comments?:        Contribution[];\n  numcomments?:     number;\n  created_at:       Date;\n  updated_at:       Date;\n  vote:             number;\n  c_type:           string;\n  isvoted:          boolean;\n\n  constructor() {\n    this.id               = -1;\n    this.title            = \"\";\n    this.url              = \"\";\n    this.contribution_id  = -1;\n    this.content          = \"\";\n    this.user_id          = -1;\n    this.username         = \"\";\n    this.useremail        = \"\";\n    this.comments         = null;\n    this.numcomments      = -1;\n    this.created_at       = new Date();\n    this.updated_at       = new Date();\n    this.vote             = 0;\n    this.c_type           = \"\";\n    this.isvoted          = false;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Contribution } from '../models/contribution.model';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.interface';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-newest',\n  templateUrl: './newest.component.html',\n  styleUrls: ['./newest.component.css']\n})\nexport class NewestComponent implements OnInit {\n\n  public userInfo:          FirebaseUserModel = new FirebaseUserModel();\n  public contributions:     Contribution[];\n  public logged:            boolean           = false;\n\n\n  constructor (\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n    private firebaseUserService:  FirebaseUserService\n  ) { this.userInfo.email = localStorage.getItem('loggedUserEmail'); }\n\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.userInfo.email != \"\") {\n      this.logged = true;   console.log(\"logged user:\", this.userInfo.email); \n      // get user\n      this.userService.getByEmail(this.userInfo.email).subscribe((response:FirebaseUserModel) => {\n        this.userInfo = response;\n        this.contributionService.getNewestRelatedToUser(this.userInfo.id).subscribe((response: Contribution[]) => {\n          this.contributions = response; \n          console.log(\"contribucions related to user\", this.userInfo.email, \":\", this.contributions);\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;    console.log(\"no logged user\"); \n      this.contributionService.getNewest().subscribe((response: Array<Contribution[]>) => {\n        this.contributions = response[0]; \n        console.log(\"contribucions with no user:\", this.contributions);\n      })\n    }\n  }\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.userInfo.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n  \n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.route.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  \n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n}\n","<div class=\"container\" >\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" style=\"color: #FFFFFF;\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(userInfo.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i;\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n        <span *ngIf=\"logged; else notLoggedVote\">\n          <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n            <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>\n          <ng-template #notVoted>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>          \n          </ng-template>\n        </span>\n        <ng-template #notLoggedVote>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n          </span> \n        </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a *ngIf=\"contribution.c_type == &quot;ask&quot;; else notAsk\" href=\"{{contribution.url}}\">\n          Ask HN: {{contribution.title}}\n        </a>\n        <ng-template #notAsk>\n          <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n          <span>\n            <a (click)=\"redirectToNews()\">\n              <span class=\"sitestr\">\n                &nbsp;({{ (contribution.url.length>30)? (contribution.url | slice:0:30)+'...':(contribution.url) }})\n              </span>\n            </a>\n          </span>\n        </ng-template>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comment(s)</a> \n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==userInfo.name\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.scss']\n})\nexport class NewsComponent implements OnInit {\n  \n  public userInfo:          FirebaseUserModel = new FirebaseUserModel();\n  public contributions:     Contribution[];\n  public logged:            boolean           = false;\n  \n  constructor (\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n    private firebaseUserService:  FirebaseUserService\n  ) { this.userInfo.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    // this.firebaseUserService.getCurrentUser().then(\n    //   res => {\n    //     console.log(\"res\", res);\n    //     this.logout();\n    //   },\n    //   err => console.log(\"err\", err)\n    // )\n    // if the user is logged\n    if (this.userInfo.email != \"\") {\n      this.logged = true;   console.log(\"logged user:\", this.userInfo.email); \n      // get user\n      this.userService.getByEmail(this.userInfo.email).subscribe((response:FirebaseUserModel) => {\n        this.userInfo = response;\n        this.contributionService.getContributionsRelatedToUser(this.userInfo.id).subscribe((response: Contribution[]) => {\n          this.contributions = response; \n          console.log(\"contribucions related to user\", this.userInfo.email, \":\", this.contributions);\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;    console.log(\"no logged user\"); \n      this.contributionService.getContributions().subscribe((response: Array<Contribution[]>) => {\n        this.contributions = response[0]; \n        console.log(\"contribucions with no user:\", this.contributions);\n      })\n    }\n  }\n\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.userInfo.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.route.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  \n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n}\n","<div class=\"container\" >\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(userInfo.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i;\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n        <span *ngIf=\"logged; else notLoggedVote\">\n          <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n            <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>\n          <ng-template #notVoted>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>          \n          </ng-template>\n        </span>\n        <ng-template #notLoggedVote>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n          </span> \n        </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span>\n          <a (click)=\"redirectToNews()\">\n            <span class=\"sitestr\">\n              &nbsp;({{ (contribution.url.length>30)? (contribution.url | slice:0:30)+'...':(contribution.url) }})\n            </span>\n          </a>\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comment(s)</a> \n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==userInfo.name\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'dateAgo',\n    pure: true\n})\nexport class DateAgoPipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        if (value) {\n            const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n            if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\n                return 'just now';\n            const intervals = {\n                'year': 31536000,\n                'month': 2592000,\n                'week': 604800,\n                'day': 86400,\n                'hour': 3600,\n                'minute': 60,\n                'second': 1\n            };\n            let counter;\n            for (const i in intervals) {\n                counter = Math.floor(seconds / intervals[i]);\n                if (counter > 0)\n                    if (counter === 1) {\n                        return counter + ' ' + i + ' ago'; // singular (1 day ago)\n                    } else {\n                        return counter + ' ' + i + 's ago'; // plural (2 days ago)\n                    }\n            }\n        }\n        return value;\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.interface';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-reply',\n  templateUrl: './reply.component.html',\n  styleUrls: ['./reply.component.css']\n})\nexport class ReplyComponent implements OnInit {\n\n  public contribution:          Contribution      = new Contribution();\n  public contributionGodfather: Contribution      = new Contribution();\n \n  public loggedUser:            FirebaseUserModel = new FirebaseUserModel();\n  public logged:                boolean           = false;\n \n  public isSubmitted:           boolean           = false;\n  public commentForm:           FormGroup;\n\n  constructor(\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private activatedRoute:       ActivatedRoute,\n    private userService:          UserService,\n    private formBuilder:          FormBuilder,\n    private firebaseUserService:  FirebaseUserService\n  ) { \n    this.loggedUser.email = localStorage.getItem('loggedUserEmail'); \n    this.contribution.id = parseInt(this.activatedRoute.snapshot.paramMap.get(\"id\"), 10); \n    console.log(\"info about\", this.contribution.id);\n  }\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.loggedUser.email != \"\") {\n      this.logged = true;\n      // get user\n      this.userService.getByEmail(this.loggedUser.email).subscribe((response:FirebaseUserModel) => {\n        this.loggedUser = response;\n        this.contributionService.getContributionByIdRelatedToUser(this.contribution.id, this.loggedUser.id).subscribe((response: Contribution) => {\n          this.contribution = response;\n          this.contributionService.getGodfather(this.contribution.id).subscribe((response: Contribution) => {\n            this.contributionGodfather = response;\n          })\n          console.log(\"contribution\", this.contribution);\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;\n      this.contributionService.getContributionById(this.contribution.id).subscribe((response: Contribution) => {\n        this.contribution = response;\n        console.log(\"contribution\", this.contribution);\n      })\n    }\n\n    //form\n    this.commentForm = this.formBuilder.group({comment:['', ] });\n  }\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.commentForm.valid) {\n      this.contributionService.replyComment(this.contribution.id, this.createCommentForm(), this.loggedUser.api_key).subscribe((response: Contribution) => {\n        this.redirectToContributionInfo(this.contributionGodfather.id);\n      })\n    } else {\n      alert(\"your commnent could not be created, try again.\")\n    }\n  }\n\n  private createCommentForm(): Contribution {\n    const commentFormValue = JSON.parse(JSON.stringify(this.commentForm.value));\n    var comment: Contribution = new Contribution();\n    comment.content           = commentFormValue.comment;\n    console.log(\"mycomment\", comment);\n    return comment;\n  }\n\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.loggedUser.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.route.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  \n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n\n  get formControls() { return this.commentForm.controls; }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Add comment</span>\n    </div>\n  </div>\n  <div class=\"row content\">\n    <div class=\"col-12\">\n      <div class=\"row\" style=\"color:#F6F6F0;\">.</div>\n      <div class=\"row contributioninfo\">\n        <div class=\"col-1 vote\">\n          <span *ngIf=\"logged; else notLoggedVote\">\n            <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n              <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>\n            <ng-template #notVoted>\n              <span class=\"imageClass vote\">\n                <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n              </span>          \n            </ng-template>\n          </span>\n          <ng-template #notLoggedVote>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n            </span> \n          </ng-template>\n        </div>\n        <div class=\"col contributioninfo\">\n          <div class=\"row contributiondetails\">\n            <div class=\"col contributiondetailsitem\">\n              <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n            </div>\n            <div class=\"col contributiondetailsitem\">&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n                {{contribution.created_at | dateAgo}}\n              </a>\n            </div>\n            <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a (click)=\"redirectToContributionInfo(contribution.contribution_id)\">parent</a>\n            </div>\n            <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a (click)=\"redirectToContributionInfo(contributionGodfather.id)\">on: {{contributionGodfather.title}}</a>\n            </div>\n          </div>\n          <div class=\"row contributioncontent\">\n            <div class=\"col\">\n              {{contribution.content}}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row commentbox\" *ngIf=\"logged\">\n        <form [formGroup]=\"commentForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">.</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\">\n              <textarea\n              style=\"border-radius:2em;\"\n              type=\"textarea\" \n              class=\"form-control\" \n              id=\"comment\" \n              formControlName=\"comment\"\n              placeholder= \"leave your comment here\"\n              name=\"comment\"\n              ></textarea>\n            </div>\n          </div>\n          <div class=\"row\" *ngIf=\"logged\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\">\n              <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">reply</button>  <!-- <%if (logged_in?) && current_user.id == @user.id %> -->        \n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">\n              Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Contribution } from '../../models/contribution.model';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ContributionRemote {\n  \n  constructor (\n    private httpClient: HttpClient\n  ) {}\n  private options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n\n  /* ==== GET ==== */\n  getContributions(): Observable<Array<Contribution[]>> {\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions`, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getContributionsRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/contributions/withvotes/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n\n  getNewest(): Observable<Array<Contribution[]>> {\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions/newest`, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getNewestRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/contributions/withvotes/newest/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })  \n  }\n\n  getAskOnly(): Observable<Array<Contribution[]>> {\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions/askonly`,     \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getAskRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/contributions/withvotes/askonly/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })  \n  }\n\n  getContributionById(id: number): Observable<Contribution> {\n    return this.httpClient.get<Contribution>(`${environment.API_URL}/contributions/` + id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getContributionByIdRelatedToUser(contribution_id: number, user_id: number): Observable<Contribution> {\n    return this.httpClient.get<Contribution>(`${environment.API_URL}/contributions/withvotes/` + contribution_id + `/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n\n  getGodfather(contribution_id: number): Observable<Contribution> {\n    return this.httpClient.get<Contribution>(`${environment.API_URL}/contributions/godfather/` + contribution_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n\n  getSubmitted(requested_user_id: number): Observable<Contribution[]>  {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/users/`+ requested_user_id + `/submitted`,\n    {\n      headers: { 'Accept':'application/json'}  \n    })\n  } \n  getSubmittedRelatedToUser(requested_user_id: number, logged_user_id: number, api_key: string): Observable<Contribution[]>  {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/users/`+ requested_user_id + `/withvotes/submitted/` + logged_user_id, \n    {\n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      }  \n    })\n  }  \n\n  getUpvotedSubmissions(requested_user_id: number): Observable<Contribution[]>  {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/users/`+ requested_user_id + `/upvotedsubmissions`,\n    {\n      headers: { 'Accept':'application/json'}  \n    })\n  } \n  getUpvotedSubmissionsRelatedToUser(logged_user_id: number, api_key: string): Observable<Contribution[]>  {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/users/`+ logged_user_id + `/withvotes/upvotedsubmissions/` + logged_user_id, \n    {\n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      }  \n    })\n  }\n\n  getThreads(requested_user_id: number): Observable<Contribution[]>  {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/users/`+ requested_user_id + `/threads`,\n    {\n      headers: { 'Accept':'application/json'}  \n    })\n  } \n  getThreadsRelatedToUser(requested_user_id: number, logged_user_id: number, api_key: string): Observable<Contribution[]>  {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/users/`+ requested_user_id + `/withvotes/threads/` + logged_user_id, \n    {\n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      }  \n    })\n  }\n  \n  getUpvotedComments(requested_user_id: number): Observable<Contribution[]>  {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/users/`+ requested_user_id + `/upvotedcomments`,\n    {\n      headers: { 'Accept':'application/json'}  \n    })\n  } \n  getUpvotedCommentsRelatedToUser(logged_user_id: number, api_key: string): Observable<Contribution[]>  {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/users/`+ logged_user_id + `/withvotes/upvotedcomments/` + logged_user_id, \n    {\n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      }  \n    })\n  }\n\n  isVoted(user_id: number, contribution_id: number): Observable<boolean> {\n    return this.httpClient.get<boolean>(`${environment.API_URL}/votes/isvoted/`+ contribution_id +`/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n\n  /* ==== POST ==== */\n  createContribution(contribution: Contribution, api_key: string): Observable<Contribution> {\n    return this.httpClient.post<Contribution>(`${environment.API_URL}/contributions`, \n    {   \n      'title':   contribution.title,\n      'url':     contribution.url,\n      'content': contribution.content\n    },\n    {       \n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      }  \n    });\n  }\n  addComment(id: number, comment: Contribution, api_key: string): Observable<Contribution> {\n    return this.httpClient.post<Contribution>(`${environment.API_URL}/contributions/`+ id, \n    {\n      'content':  comment.content\n    },\n    { \n      headers: { \n        'Accept':'application/json',\n        'API_KEY':api_key\n      } \n    });\n  }\n  replyComment(comment_id: number, reply: Contribution, api_key: string): Observable<Contribution> {\n    return this.httpClient.post<Contribution>(`${environment.API_URL}/contributions/` + comment_id + `/replyview`, \n    {\n      'content': reply.content\n    },\n    { \n      headers: { \n        'Accept':'application/json',\n        'API_KEY':api_key\n      } \n    });\n  }\n\n  /* ==== DELETE ==== */\n  deleteContribution(id: number, api_key: string): Observable<any> {\n    return this.httpClient.delete<any>(`${environment.API_URL}/contributions/` + id,\n    { \n      headers: { \n        'Accept':'application/json',\n        'API_KEY':api_key\n      } \n    });\n  }\n  unvoteContribution(contribution_id: number, api_key: string): Observable<any> {\n    return this.httpClient.delete<any>(`${environment.API_URL}/contributions/` + contribution_id + `/unvote`,\n    { \n      headers: { \n        'Accept':'application/json',\n        'API_KEY':api_key\n      } \n    });\n  }\n\n  /* ==== PUT ==== */\n  voteContribution(contribution_id:number, api_key: string): Observable<any> {\n    console.log(\"he llegado al remote\");\n    console.log(\"api key = \", api_key);\n    return this.httpClient.put<any>(`${environment.API_URL}/vote/` + contribution_id, {},\n    {\n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      } \n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { ContributionRemote } from './contribution.remote';\nimport { Observable } from 'rxjs';\nimport { Contribution } from 'src/app/models/contribution.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContributionService {\n\n  constructor (\n    private contributionRemote: ContributionRemote\n  ) { }\n\n  /* ==== GET ==== */\n  getContributions(): Observable<Array<Contribution[]>> { \n    return this.contributionRemote.getContributions();\n  }\n  getContributionsRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.contributionRemote.getContributionsRelatedToUser(user_id);\n  }\n\n  getNewest(): Observable<Array<Contribution[]>> {\n    return this.contributionRemote.getNewest();\n  }\n  getNewestRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.contributionRemote.getNewestRelatedToUser(user_id);\n  }\n\n  getAskOnly(): Observable<Array<Contribution[]>> {\n    return this.contributionRemote.getAskOnly();\n  }\n  getAskRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.contributionRemote.getAskRelatedToUser(user_id);\n  }\n\n  getContributionById(contribution_id: number): Observable<Contribution> {\n    return this.contributionRemote.getContributionById(contribution_id);\n  }\n  getContributionByIdRelatedToUser(contribution_id: number, user_id: number): Observable<Contribution> {\n    return this.contributionRemote.getContributionByIdRelatedToUser(contribution_id, user_id);\n  }\n\n  getGodfather(contribution_id: number): Observable<Contribution> {\n    return this.contributionRemote.getGodfather(contribution_id);\n  }\n\n  getSubmitted(requested_user_id: number): Observable<Contribution[]>  {\n    return this.contributionRemote.getSubmitted(requested_user_id);\n  } \n  getSubmittedRelatedToUser(requested_user_id: number, logged_user_id: number, api_key: string): Observable<Contribution[]>  {\n    return this.contributionRemote.getSubmittedRelatedToUser(requested_user_id, logged_user_id, api_key);\n  }  \n\n  getUpvotedSubmissions(requested_user_id: number): Observable<Contribution[]>  {\n    return this.contributionRemote.getUpvotedSubmissions(requested_user_id);\n  } \n  getUpvotedSubmissionsRelatedToUser(logged_user_id: number, api_key: string): Observable<Contribution[]>  {\n    return this.contributionRemote.getUpvotedSubmissionsRelatedToUser(logged_user_id, api_key);\n  }\n\n  getThreads(requested_user_id: number): Observable<Contribution[]>  {\n    return this.contributionRemote.getThreads(requested_user_id);\n  }\n  getThreadsRelatedToUser(requested_user_id: number, logged_user_id: number, api_key: string): Observable<Contribution[]>  {\n    return this.contributionRemote.getThreadsRelatedToUser(requested_user_id, logged_user_id, api_key);\n  }\n\n  getUpvotedComments(requested_user_id: number): Observable<Contribution[]>  {\n    return this.contributionRemote.getUpvotedComments(requested_user_id);\n  } \n  getUpvotedCommentsRelatedToUser(logged_user_id: number, api_key: string): Observable<Contribution[]>  {\n    return this.contributionRemote.getUpvotedCommentsRelatedToUser(logged_user_id, api_key);\n  }\n\n  isVoted(user_id: number, contribution_id: number): Observable<boolean> {\n    return this.contributionRemote.isVoted(user_id, contribution_id);\n  }\n\n  /* ==== POST ==== */\n  createContribution(contribution: Contribution, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.createContribution(contribution, api_key);\n  }\n  addComment(id: number, comment: Contribution, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.addComment(id, comment, api_key);\n  }\n  replyComment(comment_id: number, reply: Contribution, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.replyComment(comment_id, reply, api_key);\n  }\n\n  /* ==== DELETE ==== */\n  deleteContribution(id: number, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.deleteContribution(id, api_key);\n  }\n  unvoteContribution(contribution_id: number, api_key: string): Observable<any> {\n    return this.contributionRemote.unvoteContribution(contribution_id, api_key);\n  }\n\n  /* ==== PUT ==== */\n  voteContribution(contribution_id:number, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.voteContribution(contribution_id, api_key);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/models/user.interface';\nimport { Contribution } from 'src/app/models/contribution.model';\nimport { FirebaseUserModel } from 'src/app/core/user.model';\n\n@Injectable()\nexport class UserRemote {\n  \n  constructor (\n    private httpClient: HttpClient\n  ) {}\n\n  /* ==== GET ==== */\n  getById(user_id: number): Observable<FirebaseUserModel> {\n    return this.httpClient.get<FirebaseUserModel>(`${environment.API_URL}/users/`+ user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getByEmail(email: string): Observable<FirebaseUserModel> {\n    return this.httpClient.get<FirebaseUserModel>(`${environment.API_URL}/users/`+ email + `/byEmail`, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n\n  /* ==== POST ==== */\n  updateUser(user_id: number, about: string, api_key: string): Observable<FirebaseUserModel> {\n    return this.httpClient.post<FirebaseUserModel>(`${environment.API_URL}/users/` + user_id, \n    {\n      'about': about\n    },\n    {       \n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      }  \n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { UserRemote } from './user.remote';\nimport { Contribution } from '../../models/contribution.model';\nimport { Observable } from 'rxjs';\nimport { FirebaseUserModel } from '../../core/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor (\n    private userRemote: UserRemote\n  ) { }\n  \n  /* ==== GET ==== */\n  getById(user_id: number): Observable<FirebaseUserModel> {\n    return this.userRemote.getById(user_id);\n  }\n  getByEmail(email: string): Observable<FirebaseUserModel> {\n    return this.userRemote.getByEmail(email);\n  }\n\n  /* ==== POST ==== */\n  updateUser(user_id: number, about: string, api_key: string): Observable<FirebaseUserModel> {\n    return this.userRemote.updateUser(user_id, about, api_key);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { CustomValidators } from 'ng2-validation';\nimport { AuthService } from '../core/auth.service';\nimport { UserService } from '../services/user/user.service';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'app-submit',\n  templateUrl: './submit.component.html',\n  styleUrls: ['./submit.component.css']\n})\nexport class SubmitComponent implements OnInit {\n  \n  public isSubmitted:      boolean            = false;\n  public contributionForm: FormGroup;\n  public userInfo:         FirebaseUserModel = new FirebaseUserModel();\n  public urlAndContent:    boolean           = false;\n  public niUrlNiContent:   boolean           = false;\n    \n  constructor(\n    private formBuilder:          FormBuilder, \n    private contributionService:  ContributionService,\n    private route:                Router,\n    private userService:          UserService,\n    private authService:          AuthService,\n  ) { this.userInfo.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.userInfo.email != \"\") {\n      this.userService.getByEmail(this.userInfo.email).subscribe(\n        (response:FirebaseUserModel) => {\n          this.userInfo = response;\n        }\n      );\n    } else this.redirectToLogin();\n    this.contributionForm = this.formBuilder.group({\n      title:  ['', [Validators.required, Validators.minLength(4)]],\n      url:    ['', [Validators.minLength(4), CustomValidators.url]],\n      content:['', ]\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    this.urlAndContent  = false;\n    this.niUrlNiContent  = false;\n    if (this.contributionForm.valid) {\n      const contributionFormValue = JSON.parse(JSON.stringify(this.contributionForm.value));\n      \n      if (contributionFormValue.url != \"\" && contributionFormValue.content != \"\") { \n        this.urlAndContent  = true; \n      } else {this.urlAndContent  = false; }\n      \n      if (contributionFormValue.url == \"\" && contributionFormValue.content == \"\") { \n        this.niUrlNiContent  = true; \n      } else {this.niUrlNiContent  = false; }\n\n      if (this.urlAndContent == false && this.niUrlNiContent == false) {\n        this.contributionService.createContribution(this.createContributionForm(), this.userInfo.api_key).subscribe(\n          (response: any) => {\n            this.route.navigate(['/contributioninfo', response.contribution.id]);\n          } \n        )\n      }\n    }\n  }\n\n  private createContributionForm(): Contribution {\n    const contributionFormValue = JSON.parse(JSON.stringify(this.contributionForm.value));\n    var contribution: Contribution = new Contribution();\n    contribution.title   = contributionFormValue.title;\n    contribution.url     = contributionFormValue.url;\n    contribution.content = contributionFormValue.content;\n    contribution.user_id = this.userInfo.id;\n    return contribution;\n  }\n\n  redirectToNews() { this.route.navigate(['/news']); }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n\n  get formControls() { return this.contributionForm.controls; }\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\"> Submit</span>\n    </div>\n  </div>\n  <div class=\"row content\">\n    <div class=\"row\" style=\"color:#F6F6F0;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n    <form [formGroup]=\"contributionForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">title</div>\n        <div class=\"col\"[ngClass]=\"{'has-error': isSubmitted === true && formControls.title.errors}\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"text\" \n            class=\"form-control\" \n            id=\"title\" \n            formControlName=\"title\"\n            name=\"title\"\n            required\n          >\n          <span *ngIf=\"isSubmitted && formControls.title.errors\"> \n            <div class=\"error-message\" *ngIf=\"formControls.title.errors.required\">Title can't be blank</div> \n            <div class=\"error-message\" *ngIf=\"formControls.title.errors.minlength\">Title is too short (minimum is 4 characters)</div>\n          </span> \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">url</div>\n        <div class=\"col\" [ngClass]=\"{'has-error': isSubmitted === true && formControls.url.errors}\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"text\" \n            class=\"form-control\" \n            id=\"url\" \n            formControlName=\"url\"\n            name=\"url\"\n          >\n          <span *ngIf=\"isSubmitted && formControls.url.errors\"> \n            <div class=\"error-message\" *ngIf=\"formControls.url.errors.minlength\">Url is too short (minimum is 4 characters)</div>\n            <div class=\"error-message\" *ngIf=\"formControls.url.errors?.url\">Url is invalid</div>\n          </span> \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">text</div>\n        <div class=\"col\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"textarea\" \n            class=\"form-control\" \n            id=\"content\" \n            formControlName=\"content\"\n            name=\"content\"\n          >\n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row error-message\" *ngIf=\"isSubmitted && urlAndContent\">\n        <div class=\"col-1\" style=\"color:#F6F6F0\">.</div>\n        <div class=\"col-11\">\n          Error: <br>\n          Submissions can't have both urls and text, so you need to pick one. <br>\n          If you keep the url, you can always post your text as a comment in the thread.\n        </div>\n      </div>\n      <div class=\"row error-message\" *ngIf=\"isSubmitted && niUrlNiContent\">\n        <div class=\"col-1\" style=\"color:#F6F6F0\">.</div>\n        <div class=\"col-11\">\n          Error: <br>\n          Please, fill in the url Xor the content field.\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1\" style=\"color:#F6F6F0\">.</div>\n        <div class=\"col-11\">\n          <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">submit</button>\n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1\" style=\"color:#F6F6F0\">.</div>\n        <div class=\"col-11\">\n          Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via <a href=\"https://news.ycombinator.com/bookmarklet.html\" rel=\"nofollow\"><u>bookmarklet</u></a>.\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-submitted',\n  templateUrl: './submitted.component.html',\n  styleUrls: ['./submitted.component.css']\n})\nexport class SubmittedComponent implements OnInit {\n    \n  public loggedUser:        FirebaseUserModel = new FirebaseUserModel();\n  public requestedUser:     FirebaseUserModel = new FirebaseUserModel();\n  \n  public logged:            boolean           = false;\n  public sameUser:          boolean           = false;\n\n  public contributions:     Contribution[];\n\n  constructor(\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n    private activatedRoute:       ActivatedRoute,\n    private firebaseUserService:  FirebaseUserService\n  ) { this.loggedUser.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    // requested user\n    this.requestedUser.email = this.activatedRoute.snapshot.paramMap.get(\"email\");\n    this.userService.getByEmail(this.requestedUser.email).subscribe((response: FirebaseUserModel) => {\n      this.requestedUser = response;      console.log(\"requestedUser\", this.requestedUser);\n      if (this.loggedUser.email != \"\") {\n        this.logged = true;\n        if (this.requestedUser.email == this.loggedUser.email) this.sameUser = true;  // same user\n        this.userService.getByEmail(this.loggedUser.email).subscribe((response: FirebaseUserModel) => {\n          this.loggedUser = response;     console.log(\"loggedUser\", this.loggedUser);\n          this.contributionService.getSubmittedRelatedToUser(this.requestedUser.id, this.loggedUser.id, this.loggedUser.api_key).subscribe((response: any)=>{\n            this.contributions = response;\n          })\n        })\n      } \n      else {\n        this.logged = false;\n        this.sameUser = false;\n        this.contributionService.getSubmitted(this.requestedUser.id).subscribe((response: any)=>{\n          this.contributions = response;\n        })\n      }\n    });\n  }\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.loggedUser.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.route.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  \n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(loggedUser.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{requestedUser.name}}'s submissions</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i;\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n  </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span>\n          <a (click)=\"redirectToNews()\">\n            <span class=\"sitestr\">\n              &nbsp;({{ (contribution.url.length>30)? (contribution.url | slice:0:30)+'...':(contribution.url) }})\n            </span>\n          </a>\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comment(s)</a> \n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==loggedUser.name\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { UserService } from '../services/user/user.service';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\n\n@Component({\n  selector: 'app-threads',\n  templateUrl: './threads.component.html',\n  styleUrls: ['./threads.component.css']\n})\nexport class ThreadsComponent implements OnInit {\n    \n  public loggedUser:        FirebaseUserModel = new FirebaseUserModel();\n  public requestedUser:     FirebaseUserModel = new FirebaseUserModel();\n  \n  public logged:            boolean           = false;\n  public sameUser:          boolean           = false;\n\n  public contributions:     Contribution[];\n  public numContributions:  number            = 0;\n\n\n  constructor(\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n    private activatedRoute:       ActivatedRoute,\n    private firebaseUserService:  FirebaseUserService\n  ) { this.loggedUser.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    // requested user\n    this.requestedUser.email = this.activatedRoute.snapshot.paramMap.get(\"email\");\n    this.userService.getByEmail(this.requestedUser.email).subscribe((response: FirebaseUserModel) => {\n      this.requestedUser = response;      console.log(\"requestedUser\", this.requestedUser);\n      if (this.loggedUser.email != \"\") {\n        this.logged = true;\n        if (this.requestedUser.email == this.loggedUser.email) this.sameUser = true;  // same user\n        this.userService.getByEmail(this.loggedUser.email).subscribe((response: FirebaseUserModel) => {\n          this.loggedUser = response;     console.log(\"loggedUser\", this.loggedUser);\n          this.contributionService.getThreadsRelatedToUser(this.requestedUser.id, this.loggedUser.id, this.loggedUser.api_key).subscribe((response: any)=>{\n            this.contributions = response;\n            this.numContributions = this.contributions.length;\n          })\n        })\n      } \n      else {\n        this.logged = false;\n        this.sameUser = false;\n        this.contributionService.getThreads(this.requestedUser.id).subscribe((response: any)=>{\n          console.log(\"threads\", response);\n          this.contributions = response;\n        })\n      }\n    });\n  }\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.loggedUser.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.route.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  redirectToReply(id: number)                     { this.route.navigate(['/reply', id])                        }\n  \n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" style=\"color:#FFFFFF\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(loggedUser.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\">\n    <div class=\"row\" style=\"color:#F6F6F0;\">.</div>\n    <ul *ngIf=\"numContributions > 0\">\n      <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: contributions }\"></ng-container>\n    </ul>\n    <ng-template #recursiveListTmpl let-list=\"list\">\n      <li *ngFor=\"let comment of list\" class=\"commentlist\">\n        <div class=\"row commentinfo\">\n          <div class=\"col-1 vote\">\n            <span *ngIf=\"logged; else notLoggedVote\">\n              <span class=\"imageClass vote\"  *ngIf=\"comment.isvoted; else notVoted\" >\n                <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(comment.id)\" style=\"height:10px; width:10px;\">\n              </span>\n              <ng-template #notVoted>\n                <span class=\"imageClass vote\">\n                  <img src=\"../../assets/images/upvote.png\" (click)=\"vote(comment.id)\" style=\"height:10px; width:10px;\">\n                </span>          \n              </ng-template>\n            </span>\n            <ng-template #notLoggedVote>\n              <span class=\"imageClass vote\">\n                <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n              </span> \n            </ng-template>\n          </div>\n          <div class=\"col commentinfo\">\n            <div class=\"row commentdetails\">\n              <div class=\"col commentdetailsitem\">\n                <a (click)=\"redirectToUserInfo(comment.useremail)\">{{comment.username}}</a>\n              </div>\n              <div class=\"col commentdetailsitem\">&nbsp;</div>\n              <div class=\"col commentdetailsitem\">\n                <a class=\"age\" (click)=\"redirectToContributionInfo(comment.id)\">\n                  {{comment.created_at | dateAgo}}\n                </a>\n              </div>\n            </div>\n            <div class=\"row commentcontent\">\n              <div class=\"col\">\n                {{comment.content}}\n              </div>\n            </div>\n            <div class=\"row\">\n              <div *ngIf=\"logged; else notLoggedReply\" class=\"col-2 reply\">\n                <u (click)=\"redirectToReply(comment.id)\">reply</u>\n              </div>\n              <ng-template #notLoggedReply>\n                <div class=\"col-2 reply\">\n                  <u (click)=\"redirectToLogin()\">reply</u>\n                </div>\n              </ng-template>\n              <div class=\"col-10\" style=\"color:#F6F6F0\">\n                Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n              </div>\n            </div>\n          </div>\n        </div>\n        <ul *ngIf=\"comment.numcomments > 0\" class=\"commentlist\">\n          <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: comment.comments }\"></ng-container>\n        </ul>\n      </li>\n    </ng-template>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.model';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\nimport { ContributionService } from '../services/contribution/contribution.service';\n\n@Component({\n  selector: 'app-upvoted-comments',\n  templateUrl: './upvoted-comments.component.html',\n  styleUrls: ['./upvoted-comments.component.css']\n})\nexport class UpvotedCommentsComponent implements OnInit {\n    \n  public loggedUser:        FirebaseUserModel = new FirebaseUserModel();  \n  public logged:            boolean           = false;\n  public contributions:     Contribution[];\n  public numContributions:  number            = 0;\n\n  constructor(\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n    private firebaseUserService:  FirebaseUserService\n  ) { this.loggedUser.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    if (this.loggedUser.email != \"\") {\n      this.logged = true;\n      this.userService.getByEmail(this.loggedUser.email).subscribe((response: FirebaseUserModel) => {\n        this.loggedUser = response;     console.log(\"loggedUser\", this.loggedUser);\n        this.contributionService.getUpvotedCommentsRelatedToUser(this.loggedUser.id, this.loggedUser.api_key).subscribe((response: any)=>{\n            this.contributions = response;\n            this.numContributions = this.contributions.length;\n        })\n      })\n    } \n    else {\n      this.logged = false;\n      this.redirectToNews();\n    };\n  }\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.loggedUser.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.route.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  redirectToReply(id: number)                     { this.route.navigate(['/reply', id])                        }\n  \n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(loggedUser.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{loggedUser.name}}'s upvoted comments</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\">\n    <ul *ngIf=\"numContributions > 0\">\n      <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: contributions }\"></ng-container>\n    </ul>\n    <ng-template #recursiveListTmpl let-list=\"list\">\n      <li *ngFor=\"let comment of list\" class=\"commentlist\">\n        <div class=\"row commentinfo\">\n          <div class=\"col-1 vote\">\n            <span *ngIf=\"logged; else notLoggedVote\">\n              <span class=\"imageClass vote\"  *ngIf=\"comment.isvoted; else notVoted\" >\n                <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(comment.id)\" style=\"height:10px; width:10px;\">\n              </span>\n              <ng-template #notVoted>\n                <span class=\"imageClass vote\">\n                  <img src=\"../../assets/images/upvote.png\" (click)=\"vote(comment.id)\" style=\"height:10px; width:10px;\">\n                </span>          \n              </ng-template>\n            </span>\n            <ng-template #notLoggedVote>\n              <span class=\"imageClass vote\">\n                <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n              </span> \n            </ng-template>\n          </div>\n          <div class=\"col commentinfo\">\n            <div class=\"row commentdetails\">\n              <div class=\"col commentdetailsitem\">\n                <a (click)=\"redirectToUserInfo(comment.useremail)\">{{comment.username}}</a>\n              </div>\n              <div class=\"col commentdetailsitem\">&nbsp;</div>\n              <div class=\"col commentdetailsitem\">\n                <a class=\"age\" (click)=\"redirectToContributionInfo(comment.id)\">\n                  {{comment.created_at | dateAgo}}\n                </a>\n              </div>\n            </div>\n            <div class=\"row commentcontent\">\n              <div class=\"col\">\n                {{comment.content}}\n              </div>\n            </div>\n            <div class=\"row\">\n              <div *ngIf=\"logged; else notLoggedReply\" class=\"col-2 reply\">\n                <u (click)=\"redirectToReply(comment.id)\">reply</u>\n              </div>\n              <ng-template #notLoggedReply>\n                <div class=\"col-2 reply\">\n                  <u (click)=\"redirectToLogin()\">reply</u>\n                </div>\n              </ng-template>\n              <div class=\"col-10\" style=\"color:#F6F6F0\">\n                Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n              </div>\n            </div>\n          </div>\n        </div>\n        <ul *ngIf=\"comment.numcomments > 0\" class=\"commentlist\">\n          <ng-container *ngTemplateOutlet=\"recursiveListTmpl; context:{ list: comment.comments }\"></ng-container>\n        </ul>\n      </li>\n    </ng-template>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\n\n@Component({\n  selector: 'app-upvoted-submissions',\n  templateUrl: './upvoted-submissions.component.html',\n  styleUrls: ['./upvoted-submissions.component.css']\n})\nexport class UpvotedSubmissionsComponent implements OnInit {\n    \n  public loggedUser:        FirebaseUserModel = new FirebaseUserModel();  \n  public logged:            boolean           = false;\n  public contributions:     Contribution[];\n\n  constructor(\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n    private firebaseUserService:  FirebaseUserService\n  ) { this.loggedUser.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    if (this.loggedUser.email != \"\") {\n      this.logged = true;\n      this.userService.getByEmail(this.loggedUser.email).subscribe((response: FirebaseUserModel) => {\n        this.loggedUser = response;     console.log(\"loggedUser\", this.loggedUser);\n        this.contributionService.getUpvotedSubmissionsRelatedToUser(this.loggedUser.id, this.loggedUser.api_key).subscribe((response: any)=>{\n          this.contributions = response;\n        })\n      })\n    } \n    else {\n      this.logged = false;\n      this.redirectToNews()\n    }\n  }\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.loggedUser.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToNews()                                { this.route.navigate(['/news']);                            }\n  redirectToNewest()                              { this.route.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.route.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.route.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.route.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.route.navigate(['/userinfo', useremail])              }\n  \n  redirectToThreads(useremail: string)            { this.route.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.route.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.route.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.route.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(loggedUser.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{loggedUser.name}}'s upvoted submissions</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i;\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n  </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span>\n          <a (click)=\"redirectToNews()\">\n            <span class=\"sitestr\">\n              &nbsp;({{ (contribution.url.length>30)? (contribution.url | slice:0:30)+'...':(contribution.url) }})\n            </span>\n          </a>\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comment(s)</a> \n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==loggedUser.name\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { UserService } from '../services/user/user.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css'],\n})\nexport class UserInfoComponent implements OnInit {\n\n  public userForm:          FormGroup;\n  \n  public loggedUser:        FirebaseUserModel = new FirebaseUserModel();\n  public requestedUser:     FirebaseUserModel = new FirebaseUserModel();\n\n  public logged:            boolean           = false;\n  public sameUser:          boolean           = false;\n  public isSubmitted:       boolean           = false;\n\n  constructor (\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private firebaseUserService: FirebaseUserService,\n    public authService: AuthService,\n    private activatedRoute: ActivatedRoute\n  ) { this.loggedUser.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    // requested user\n    this.requestedUser.email = this.activatedRoute.snapshot.paramMap.get(\"email\");\n    this.userService.getByEmail(this.requestedUser.email).subscribe((response: FirebaseUserModel) => {\n      this.requestedUser = response;\n      console.log(\"requestedUser\", this.requestedUser);\n    });\n\n    // logged user\n    if (this.loggedUser.email != \"\") {\n      this.logged = true;\n      this.userService.getByEmail(this.loggedUser.email).subscribe((response: FirebaseUserModel) => {\n        this.loggedUser = response;\n        console.log(\"loggedUser\", this.loggedUser);\n      })\n      // same user\n      if (this.requestedUser.email == this.loggedUser.email) this.sameUser = true;\n    } else {\n      this.logged = false;\n      this.sameUser = false;\n    }\n\n    this.userForm = this.formBuilder.group({\n      about:  ['', [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    this.userService.updateUser(this.loggedUser.id, this.createUserForm(), this.loggedUser.api_key).subscribe(\n      (response: FirebaseUserModel) => {\n        location.reload();\n      }\n    )\n  }\n  private createUserForm(): string {\n    return this.userForm.value.about;\n  }\n  \n  redirectToNews()                                { this.router.navigate(['/news']);                            }\n  redirectToNewest()                              { this.router.navigate(['/newest']);                          }\n  redirectToAskOnly()                             { this.router.navigate(['/askonly']);                         }\n  redirectToSubmit()                              { this.router.navigate(['/submit']);                          }\n\n  redirectToContributionInfo(id: number)          { this.router.navigate(['/contributioninfo', id])             }\n  redirectToUserInfo(useremail: string)           { this.router.navigate(['/userinfo', useremail])              }\n  \n  redirectToThreads(useremail: string)            { this.router.navigate(['/threads', useremail])               }\n  redirectToSubmitted(useremail: string)          { this.router.navigate(['/submitted', useremail])             }\n  redirectToUpvotedSubmissions()                  { this.router.navigate(['/upvotedsubmissions'])               }\n  redirectToUpvotedComments()                     { this.router.navigate(['/upvotedcomments'])                  }\n  \n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(\n      res => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        location.reload();\n      },\n      err => {\n        this.firebaseUserService.getCurrentUser().then(\n          res => {\n            localStorage.setItem('loggedUserEmail', \"\");\n            location.reload();\n          }\n        )\n      }\n    )\n  }\n  \n  get formControls() { return this.userForm.controls; }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads(loggedUser.email)\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\">\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">user:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.name}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">created:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.created_at | dateAgo}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">karma:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.karma}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">about:</div>\n        <div class=\"col fieldvalue\" *ngIf=\"sameUser; else notSameUserAbout\">\n          <textarea\n            style=\"border-radius:2em;\"\n            type=\"textarea\" \n            class=\"form-control\" \n            id=\"about\" \n            formControlName=\"about\"\n            placeholder= \"{{ loggedUser.about }}\"\n            name=\"about\"\n          ></textarea>\n        </div>\n        <ng-template #notSameUserAbout>\n          <div class=\"col fieldvalue\">{{requestedUser.about}}</div>\n        </ng-template>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\">email:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.email}}</div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\">api key:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.api_key}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToSubmitted(requestedUser.email)\">submitted</u>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToThreads(requestedUser.email)\">comments</u>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToUpvotedSubmissions()\">upvoted submissions</u>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToUpvotedComments()\">upvoted comments</u> \n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">update</button>  <!-- <%if (logged_in?) && current_user.id == @user.id %> -->        \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1\"> </div>\n        <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">\n          Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://glacial-atoll-33184.herokuapp.com',\n  //API_URL: 'http://3.81.94.224:8080', //amazon\n  firebase: {\n    apiKey: \"AIzaSyDsGncrZFM3qxYVq7EBAuqXpGN30UvCU8k\",\n    authDomain: \"hacker-news-asw.firebaseapp.com\",\n    databaseURL: \"https://hacker-news-asw.firebaseio.com\",\n    projectId: \"hacker-news-asw\",\n    storageBucket: \"hacker-news-asw.appspot.com\",\n    messagingSenderId: \"634881005621\",\n    appId: \"1:634881005621:web:27607b9b4fdda363dc397c\",\n    measurementId: \"G-V0R0H0VRJK\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}