{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ask-only/ask-only.component.ts","webpack:///src/app/ask-only/ask-only.component.html","webpack:///src/app/contribution-info/contribution-info.component.ts","webpack:///src/app/contribution-info/contribution-info.component.html","webpack:///src/app/core/auth.service.ts","webpack:///src/app/core/user.model.ts","webpack:///src/app/core/user.service.ts","webpack:///src/app/newest/newest.component.ts","webpack:///src/app/newest/newest.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/pipes/date-ago.pipe.ts","webpack:///src/app/services/contribution/contribution.remote.ts","webpack:///src/app/services/contribution/contribution.service.ts","webpack:///src/app/services/user/user.remote.ts","webpack:///src/app/services/user/user.service.ts","webpack:///src/app/submit/submit.component.ts","webpack:///src/app/submit/submit.component.html","webpack:///src/app/submitted/submitted.component.ts","webpack:///src/app/submitted/submitted.component.html","webpack:///src/app/threads/threads.component.ts","webpack:///src/app/threads/threads.component.html","webpack:///src/app/upvoted-comments/upvoted-comments.component.ts","webpack:///src/app/upvoted-comments/upvoted-comments.component.html","webpack:///src/app/upvoted-submissions/upvoted-submissions.component.ts","webpack:///src/app/upvoted-submissions/upvoted-submissions.component.html","webpack:///src/app/user-info/user-info.component.ts","webpack:///src/app/user-info/user-info.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","AskOnlyComponent","route","contributionService","authService","firebaseUserService","userInfo","logged","getCurrentUser","user","name","displayName","email","provider","providerData","providerId","console","log","err","getAskOnly","subscribe","response","contributions","doLogout","location","reload","confirm","navigate","doGoogleAuth","res","redirectToNews","redirectToNewest","redirectToAskOnly","ContributionInfoComponent","activatedRoute","contribution","parseInt","snapshot","paramMap","get","getContributionById","redirectToUserInfo","redirectToContributionInfo","AuthService","afAuth","reject","GoogleAuthProvider","addScope","signInWithPopup","currentUser","signOut","providedIn","FirebaseUserModel","created_at","Date","updated_at","google_token","google_refresh_token","about","api_key","karma","FirebaseUserService","db","onAuthStateChanged","value","updateProfile","photoURL","NewestComponent","getNewest","NewsComponent","userService","getContributions","DateAgoPipe","args","seconds","Math","floor","intervals","counter","i","pure","ContributionRemote","httpClient","headers","set","API_URL","responseType","post","url","content","comment","comment_id","reply","vote_id","put","ContributionService","contributionRemote","createContribution","addComment","replyComment","deleteContribution","deleteVote","voteContribution","UserRemote","user_id","UserService","userRemote","getById","getSubmitted","getUpvotedSubmissions","getUpvotedComments","getThreads","getByEmail","updateUser","SubmitComponent","formBuilder","isSubmitted","contributionForm","group","required","minLength","contributionFormValue","JSON","parse","stringify","c_type","vote","valid","createContributionForm","controls","onSubmit","SubmittedComponent","ThreadsComponent","list","children","contribution1","contribution2","threads","UpvotedCommentsComponent","UpvotedSubmissionsComponent","UserInfoComponent","router","loggedUser","requestedUser","sameUser","getIdToken","idToken","userForm","createUserForm","updatedUser","redirectToSubmitted","redirectToThreads","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewsComponent } from './news/news.component';\nimport { NewestComponent } from './newest/newest.component';\nimport { ThreadsComponent } from './threads/threads.component';\nimport { AskOnlyComponent } from './ask-only/ask-only.component';\nimport { SubmitComponent } from './submit/submit.component';\nimport { SubmittedComponent } from './submitted/submitted.component';\nimport { UpvotedCommentsComponent } from './upvoted-comments/upvoted-comments.component';\nimport { UpvotedSubmissionsComponent } from './upvoted-submissions/upvoted-submissions.component';\nimport { ContributionInfoComponent } from './contribution-info/contribution-info.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\nconst routes: Routes = [\n  { path: '',                     component: NewsComponent,               },\n  { path: 'news',                 component: NewsComponent,               },\n  { path: 'newest',               component: NewestComponent,             },\n  { path: 'threads',              component: ThreadsComponent,            },\n  { path: 'askonly',              component: AskOnlyComponent             },\n  { path: 'submit',               component: SubmitComponent              },\n  { path: 'submitted',            component: SubmittedComponent           },\n  { path: 'upvotedsubmissions',   component: UpvotedSubmissionsComponent  },\n  { path: 'upvotedcomments',      component: UpvotedCommentsComponent     },\n  { path: 'userinfo/:email',      component: UserInfoComponent            },\n  { path: 'contributioninfo/:id', component: ContributionInfoComponent    },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'HackerNews';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NewsComponent } from './news/news.component';\nimport { NewestComponent } from './newest/newest.component';\nimport { ThreadsComponent } from './threads/threads.component';\nimport { AskOnlyComponent } from './ask-only/ask-only.component';\nimport { SubmitComponent } from './submit/submit.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DateAgoPipe } from './pipes/date-ago.pipe';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { ContributionService } from './services/contribution/contribution.service';\nimport { ContributionRemote } from './services/contribution/contribution.remote';\nimport { UserRemote } from './services/user/user.remote';\nimport { UserService } from './services/user/user.service';\nimport { SubmittedComponent } from './submitted/submitted.component';\nimport { UpvotedSubmissionsComponent } from './upvoted-submissions/upvoted-submissions.component';\nimport { UpvotedCommentsComponent } from './upvoted-comments/upvoted-comments.component';\nimport { ContributionInfoComponent } from './contribution-info/contribution-info.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewsComponent,\n    NewestComponent,\n    ThreadsComponent,\n    AskOnlyComponent,\n    SubmitComponent,\n    DateAgoPipe,\n    SubmittedComponent,\n    UpvotedSubmissionsComponent,\n    UpvotedCommentsComponent,\n    ContributionInfoComponent,\n    UserInfoComponent,\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    ContributionRemote,\n    ContributionService,\n    UserRemote,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.interface';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { Contribution } from '../models/contribution.interface';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'app-ask-only',\n  templateUrl: './ask-only.component.html',\n  styleUrls: ['./ask-only.component.css']\n})\nexport class AskOnlyComponent implements OnInit {\n\n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public contributions: Contribution[];\n  logged:       boolean = false;\n\n  constructor(\n    private route: Router,\n    private contributionService: ContributionService,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n      },\n      err =>  { this.logged = false }\n    );\n    this.contributionService.getAskOnly().subscribe((response: Array<Contribution[]>) => {\n      this.contributions = response[0];\n    })\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" style=\"color:#FFFFFF\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i; first as isFirst\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span> \n          (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">X comments</a> <!-- falta nombre de comentaris -->\n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.interface';\nimport { Contribution } from '../models/contribution.interface';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'app-contribution-info',\n  templateUrl: './contribution-info.component.html',\n  styleUrls: ['./contribution-info.component.css']\n})\nexport class ContributionInfoComponent implements OnInit {\n\n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public contribution: Contribution;\n  logged:       boolean = false;\n\n  constructor(\n    private route: Router,\n    private contributionService: ContributionService,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.contribution.id = parseInt(this.activatedRoute.snapshot.paramMap.get(\"id\"), 10);\n\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n      },\n      err =>  { this.logged = false }\n    );\n    this.contributionService.getContributionById(this.contribution.id).subscribe((response: Contribution) => {\n      console.log(response);\n      this.contribution = response;\n      console.log(this.contribution);\n    })\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\">\n    <div class=\"row contributioninfo\">\n      <div class=\"col-1 vote\">\n        <span *ngIf=\"logged; else notLoggedVote\">\n          <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n            <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>\n          <ng-template #notVoted>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>          \n          </ng-template>\n        </span>\n        <ng-template #notLoggedVote>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n          </span> \n        </ng-template>\n      </div>\n      <div class=\"col contributioninfo\">\n        <div class=\"row contributiontitle\">\n          <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n          <span> \n            (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n          </span>\n        </div>\n        <div class=\"row contributiondetails\">\n          <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n          <div class=\"col contributiondetailsitem\">&nbsp;</div>\n          <div class=\"col contributiondetailsitem\">by</div>\n          <div class=\"col contributiondetailsitem\">&nbsp;</div>\n          <div class=\"col contributiondetailsitem\">\n            <a (click)=\"redirectToUserInfo(userInfo.email)\">{{contribution.user_name}}</a>\n          </div>\n          <div class=\"col contributiondetailsitem\">&nbsp;</div>\n          <div class=\"col contributiondetailsitem\">\n            <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n              {{contribution.created_at | dateAgo}}\n            </a>\n          </div>\n          <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n          <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n          <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n          <div class=\"col contributiondetailsitem\">\n            <a (click)=\"redirectToContributionInfo(contribution.id)\">X comments</a> <!-- falta nombre de comentaris -->\n          </div>\n          <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n            &nbsp;|&nbsp;\n            <a (click)=\"delete(contribution.id)\">delete</a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row commentbox\">I will be a box</div>\n    <div class=\"row comments\">I will be the comments</div>\n  </div>\n</div>","import { Injectable } from \"@angular/core\";\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n    \n  constructor (\n    public afAuth: AngularFireAuth\n  ) {}\n\n  doGoogleAuth() {\n    return new Promise<any>((resolve, reject) => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      firebase.auth()\n      .signInWithPopup(provider)\n      .then (\n        res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        }\n      )\n    })\n  }\n\n  doLogout() {\n    return new Promise((resolve, reject) => {\n      if (firebase.auth().currentUser) {\n        firebase.auth().signOut()\n        resolve();\n      } else reject();\n    });\n  }\n}","export class FirebaseUserModel {\n  name:     string;\n  email:    string;\n  provider: string;\n\n  // new\n  id:                    number;\n  created_at:            Date;\n  updated_at:            Date;\n  google_token:          string;\n  google_refresh_token:  string;\n  about:                 string;\n  api_key:               string;\n  karma:                 number;\n\n  constructor() {\n    this.name     = \"\";\n    this.email    = \"\";\n    this.provider = \"\";\n\n    // new\n    this.id                   = 0;\n    this.created_at           = new Date();\n    this.updated_at           = new Date();\n    this.google_token         = \"\";\n    this.google_refresh_token = \"\";\n    this.about                = \"\";\n    this.api_key              = \"\";\n    this.karma                = 0;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseUserService {\n\n  constructor (\n    public db: AngularFirestore,\n    public afAuth: AngularFireAuth\n  ) {}\n  \n  getCurrentUser() {\n    return new Promise<any>((resolve, reject) => {\n      var user = firebase.auth().onAuthStateChanged(\n        function(user) {\n          if (user) resolve(user);\n          else      reject('No user logged in');\n        }\n      )\n    })\n  }\n\n  updateCurrentUser(value) {\n    return new Promise<any>((resolve, reject) => {\n      var user = firebase.auth().currentUser;\n      user.updateProfile({\n        displayName: value.name,\n        photoURL: user.photoURL\n      }).then (\n        res => { resolve(res) }, \n        err => reject(err)\n      )\n    })\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Contribution } from '../models/contribution.interface';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.interface';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'app-newest',\n  templateUrl: './newest.component.html',\n  styleUrls: ['./newest.component.css']\n})\nexport class NewestComponent implements OnInit {\n\n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public contributions: Contribution[];\n  logged:       boolean = false;\n\n\n  constructor(\n    private route: Router,\n    private contributionService: ContributionService,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n      },\n      err =>  { this.logged = false }\n    );\n    this.contributionService.getNewest().subscribe((response: Array<Contribution[]>) => {\n      this.contributions = response[0];\n      console.log(response);\n    })\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" style=\"color:#FFFFFF\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i; first as isFirst\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span> \n          (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">X comments</a> <!-- falta nombre de comentaris -->\n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.interface';\nimport { Contribution } from '../models/contribution.interface';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.scss']\n})\nexport class NewsComponent implements OnInit {\n  \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public contributions: Contribution[];\n  public myContribution: Contribution;\n  logged:       boolean = false;\n\n  constructor(\n    private route: Router,\n    private contributionService: ContributionService,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n    private userService: UserService\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        console.log(\"display name\", user.displayName);\n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n      },\n      err =>  { this.logged = false }\n    );\n    this.contributionService.getContributions().subscribe((response: Array<Contribution[]>) => {\n      console.log(\"contributions response\", response[0]);\n      this.contributions = response[0];\n      console.log(\"contributions\", this.contributions);\n    })\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    console.log(\"contribution infooooooooooooooo\", id);\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","\n<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i; first as isFirst\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span> \n          (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">{{contribution.user_name}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">X comments</a> <!-- falta nombre de comentaris -->\n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'dateAgo',\n    pure: true\n})\nexport class DateAgoPipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        if (value) {\n            const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n            if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\n                return 'just now';\n            const intervals = {\n                'year': 31536000,\n                'month': 2592000,\n                'week': 604800,\n                'day': 86400,\n                'hour': 3600,\n                'minute': 60,\n                'second': 1\n            };\n            let counter;\n            for (const i in intervals) {\n                counter = Math.floor(seconds / intervals[i]);\n                if (counter > 0)\n                    if (counter === 1) {\n                        return counter + ' ' + i + ' ago'; // singular (1 day ago)\n                    } else {\n                        return counter + ' ' + i + 's ago'; // plural (2 days ago)\n                    }\n            }\n        }\n        return value;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Contribution } from '../../models/contribution.interface';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ContributionRemote {\n  \n  constructor (\n    private httpClient: HttpClient\n  ) {}\n\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  /* ==== GET ==== */\n  getContributions(): Observable<Array<Contribution[]>> {\n    // return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions.json`, \n    // { \n    //   headers:{ 'X-Skip-Interceptor': '' }\n    // });\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions.json`, {\n      headers: this.headers, \n      responseType: 'json'\n    });\n  }\n  getNewest(): Observable<Array<Contribution[]>> {\n    // return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions/newest.json`, \n    // {\n    //   headers:{ 'X-Skip-Interceptor': '' }\n    // });\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions/newest.json`);\n  }\n  getAskOnly(): Observable<Array<Contribution[]>> {\n    // return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions/askonly.json`, \n    // {\n    //   headers:{ 'X-Skip-Interceptor': '' }\n    // });\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions/askonly.json`, );\n  }\n  getContributionById(id: number): Observable<Contribution> {\n    // return this.httpClient.get<Contribution>(`${environment.API_URL}/contributions/` + id, \n    // {\n    //   headers:{ 'X-Skip-Interceptor': '' }\n    // });\n    return this.httpClient.get<Contribution>(`${environment.API_URL}/contributions/` + id, );\n  }\n\n  /* ==== POST ==== */\n  createContribution(contribution: Contribution): Observable<Contribution> {\n    return this.httpClient.post<Contribution>(`${environment.API_URL}/contributions`, \n    {   \n      'title':   contribution.title,\n      'url':     contribution.url,\n      'content': contribution.content\n    },\n    { headers: { 'Content-Type':\"application/json\" } });\n  }\n  addComment(id: number, comment: Contribution): Observable<Array<Contribution[]>> {\n    return this.httpClient.post<Array<Contribution[]>>(`${environment.API_URL}/contributions/`+id, \n    {\n      'content':  comment.content\n    },\n    { headers: { 'Content-Type':\"application/json\" } });\n  }\n  replyComment(comment_id: number, reply: Contribution): Observable<Contribution> {\n    return this.httpClient.post<Contribution>(`${environment.API_URL}/contributions/` + comment_id + `/replyview`, \n    {\n      'content':  reply.content\n    }, \n    { headers: { 'Content-Type':\"application/json\" } });\n  }\n\n  /* ==== DELETE ==== */\n  deleteContribution(id: number): Observable<Contribution> {\n    return this.httpClient.delete<Contribution>(`${environment.API_URL}/contributions/` + id);\n  }\n  deleteVote(vote_id: number): Observable<Contribution> {\n    return this.httpClient.delete<Contribution>(`${environment.API_URL}/contributions/` + vote_id + `unvote`);\n  }\n\n  /* ==== PUT ==== */\n  voteContribution(id: number): Observable<Contribution> {\n    return this.httpClient.put<Contribution>(`${environment.API_URL}/contributions/` + id + `vote`,\n    { headers: { 'Content-Type':\"application/json\" } });\n  }\n}","import { Injectable } from '@angular/core';\nimport { ContributionRemote } from './contribution.remote';\nimport { Observable } from 'rxjs';\nimport { Contribution } from 'src/app/models/contribution.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContributionService {\n  \n  constructor (\n    private contributionRemote: ContributionRemote\n  ) { }\n\n  /* ==== GET ==== */\n  getContributions(): Observable<Array<Contribution[]>> {\n    return this.contributionRemote.getContributions();\n  }\n  getNewest(): Observable<Array<Contribution[]>> {\n    return this.contributionRemote.getNewest();\n  }\n  getAskOnly(): Observable<Array<Contribution[]>> {\n    return this.contributionRemote.getAskOnly();\n  }\n  getContributionById(id: number): Observable<Contribution> {\n    return this.contributionRemote.getContributionById(id);\n  }\n\n  /* ==== POST ==== */\n  createContribution(contribution: Contribution): Observable<Contribution> {\n    return this.contributionRemote.createContribution(contribution);\n  }\n  addComment(id: number, comment: Contribution): Observable<Array<Contribution[]>> {\n    return this.contributionRemote.addComment(id, comment);\n  }\n  replyComment(comment_id: number, reply: Contribution): Observable<Contribution> {\n    return this.contributionRemote.replyComment(comment_id, reply);\n  }\n\n  /* ==== DELETE ==== */\n  deleteContribution(id: number): Observable<Contribution> {\n    return this.contributionRemote.deleteContribution(id);\n  }\n  deleteVote(vote_id: number): Observable<Contribution> {\n    return this.contributionRemote.deleteVote(vote_id);\n  }\n\n  /* ==== PUT ==== */\n  voteContribution(id: number): Observable<Contribution> {\n    return this.contributionRemote.voteContribution(id);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/models/user.interface';\nimport { Contribution } from 'src/app/models/contribution.interface';\nimport { FirebaseUserModel } from 'src/app/core/user.model';\n\n@Injectable()\nexport class UserRemote {\n  \n  constructor (\n    private httpClient: HttpClient\n  ) {}\n\n  /* ==== GET ==== */\n  getById(user_id: number): Observable<FirebaseUserModel> {\n    return this.httpClient.get<FirebaseUserModel>(`${environment.API_URL}/users/`+ user_id, \n    {\n      headers:{ 'X-Skip-Interceptor': '' }\n    });\n  }\n  getByEmail(email: string): Observable<FirebaseUserModel> {\n    // return this.httpClient.get<FirebaseUserModel>(`${environment.API_URL}/users/email?=`+email, \n    // {\n    //   headers:{ 'X-Skip-Interceptor': '' }\n    // });\n    return this.httpClient.get<FirebaseUserModel>(`${environment.API_URL}/users/`+email);\n  }\n  getSubmitted(user_id: number): Observable<Array<Contribution[]>> {\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/users/submitted/` + user_id);\n  }\n  getUpvotedSubmissions(user_id: number): Observable<Array<Contribution[]>> { //FIX THIS SHIT\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/users/upvotedsubmissions/` + user_id);\n  }\n  getUpvotedComments(user_id: number): Observable<Array<Contribution[]>> { //FIX THIS SHIT\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/users/upvotedcomments/` + user_id);\n  }\n  getThreads(user_id: number): Observable<Array<Contribution[]>> { //FIX THIS SHIT\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/users/threads/` + user_id);\n  }\n\n  /* ==== POST ==== */\n  updateUser(user_id: number, about: String): Observable<FirebaseUserModel> {\n    return this.httpClient.post<FirebaseUserModel>(`${environment.API_URL}/users/` + user_id, \n    {\n      'about': about\n    },\n    { headers: { 'Content-Type':\"application/json\" } });\n  }\n}","import { Injectable } from '@angular/core';\nimport { UserRemote } from './user.remote';\nimport { Contribution } from '../../models/contribution.interface';\nimport { Observable } from 'rxjs';\nimport { FirebaseUserModel } from '../../core/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor (\n    private userRemote: UserRemote\n  ) { }\n  \n  /* ==== GET ==== */\n  getById(user_id: number): Observable<FirebaseUserModel> {\n    return this.userRemote.getById(user_id);\n  }\n  getSubmitted(user_id: number): Observable<Array<Contribution[]>> {\n    return this.userRemote.getSubmitted(user_id);    \n  }\n  getUpvotedSubmissions(user_id: number): Observable<Array<Contribution[]>> { \n    return this.userRemote.getUpvotedSubmissions(user_id);  \n  }\n  getUpvotedComments(user_id: number): Observable<Array<Contribution[]>> { \n    return this.userRemote.getUpvotedComments(user_id);  \n  }\n  getThreads(user_id: number): Observable<Array<Contribution[]>> { \n    return this.userRemote.getThreads(user_id);  \n  }\n  getByEmail(email: string): Observable<FirebaseUserModel> {\n    return this.userRemote.getByEmail(email);\n  }\n\n  /* ==== POST ==== */\n  updateUser(user_id: number, about: String): Observable<FirebaseUserModel> {\n    return this.userRemote.updateUser(user_id, about);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Contribution } from '../models/contribution.interface';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { CustomValidators } from 'ng2-validation';\n\n\n@Component({\n  selector: 'app-submit',\n  templateUrl: './submit.component.html',\n  styleUrls: ['./submit.component.css']\n})\nexport class SubmitComponent implements OnInit {\n  \n  isSubmitted = false;\n  contributionForm: FormGroup;\n    \n  constructor(\n    private formBuilder: FormBuilder, \n    private contributionService: ContributionService,\n    private route: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.contributionForm = this.formBuilder.group({\n      title:  ['', [Validators.required, Validators.minLength(4)]],\n      url:    ['', [Validators.minLength(4), CustomValidators.url]],\n      content:['', ]\n    });\n  }\n\n  private createContributionForm() {\n    const contributionFormValue = JSON.parse(JSON.stringify(this.contributionForm.value));\n    const contribution: Contribution = {\n      title:      contributionFormValue.title,\n      url:        contributionFormValue.url,\n      content:    contributionFormValue.content,\n      user_id:    1, //get userid\n      created_at: new Date(),\n      updated_at: new Date(),\n      c_type:     \"\",\n      vote:       0\n    };\n    return contribution;\n  }\n\n  onSubmit() {\n    console.log(\"I'm submitted bitches\");\n    this.isSubmitted = true;\n    if (this.contributionForm.valid) {\n      console.log(\"I'm valid bitches\");\n      this.contributionService.createContribution(this.createContributionForm()).subscribe((response: Contribution) => {\n        console.log(response);\n      })\n      /*\n      this.contributionService.createContribution(this.createUserForm()).subscribe((response: UserData) => {\n        localStorage.setItem('userEmail', response.email);\n        localStorage.setItem('password', response.password);\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('username', response.username)\n        this.redirectToMainMenu();\n      },\n      errorrResponse => {\n        if (errorrResponse.status == 403 || errorrResponse.status == 404)this.wrongCredentials = true;\n        else this.internalError= true;\n      \n      });\n      */\n    } else {\n      //alert(this.translate.instant('formErrors.notAuthenticated'));\n    }\n    //if new url\n    //this.route.navigate(['/news']);\n  }\n\n  get formControls() { return this.contributionForm.controls; }\n  \n  redirectToNews() {\n    this.route.navigate(['/news']);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\"> Submit</span>\n    </div>\n  </div>\n  <div class=\"row content\">\n    <form [formGroup]=\"contributionForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">title</div>\n        <div class=\"col\"[ngClass]=\"{'has-error': isSubmitted === true && formControls.title.errors}\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"text\" \n            class=\"form-control\" \n            id=\"title\" \n            formControlName=\"title\"\n            name=\"title\"\n            required\n          >\n          <span *ngIf=\"isSubmitted && formControls.title.errors\"> \n            <div class=\"error-message\" *ngIf=\"formControls.title.errors.required\">Title can't be blank</div> \n            <div class=\"error-message\" *ngIf=\"formControls.title.errors.minlength\">Title is too short (minimum is 4 characters)</div>\n          </span> \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">url</div>\n        <div class=\"col\" [ngClass]=\"{'has-error': isSubmitted === true && formControls.url.errors}\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"text\" \n            class=\"form-control\" \n            id=\"url\" \n            formControlName=\"url\"\n            name=\"url\"\n          >\n          <span *ngIf=\"isSubmitted && formControls.url.errors\"> \n            <div class=\"error-message\" *ngIf=\"formControls.url.errors.minlength\">Url is too short (minimum is 4 characters)</div>\n            <div class=\"error-message\" *ngIf=\"formControls.url.errors?.url\">Url is invalid</div>\n          </span> \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">text</div>\n        <div class=\"col\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"textarea\" \n            class=\"form-control\" \n            id=\"content\" \n            formControlName=\"content\"\n            name=\"content\"\n          >\n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1\" style=\"color:#F6F6F0\">.</div>\n        <div class=\"col-11\">\n          <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">submit</button>\n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1\" style=\"color:#F6F6F0\">.</div>\n        <div class=\"col-11\">\n          Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via <a href=\"https://news.ycombinator.com/bookmarklet.html\" rel=\"nofollow\"><u>bookmarklet</u></a>.\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.interface';\nimport { Router } from '@angular/router';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-submitted',\n  templateUrl: './submitted.component.html',\n  styleUrls: ['./submitted.component.css']\n})\nexport class SubmittedComponent implements OnInit {\n    \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public contributions: Contribution[];\n  logged:       boolean = false;\n\n  constructor(\n    private route: Router,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n    private userService: UserService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        console.log(\"display name\", user.displayName);\n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n        this.userService.getByEmail(this.userInfo.email).subscribe((response: FirebaseUserModel) => {\n          console.log(\"user by email\", response);\n          this.userInfo.id = response.id;\n        })\n      },\n      err =>  { \n        this.logged = false;\n        this.redirectToNews();\n      }\n    );\n    this.userService.getSubmitted(this.userInfo.id).subscribe((response: Array<Contribution[]>) => {\n      console.log(response);\n    })\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{userInfo.name}}'s submissions</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i; first as isFirst\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span> \n          (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\">{{contribution.created_at | dateAgo}}</a><!--<a href= \"/contributions/<%= contribution.id %>\" ><%= time_ago_in_words(contribution.created_at) %> ago</a>-->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">X comments</a> <!-- falta nombre de comentaris -->\n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.interface';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-threads',\n  templateUrl: './threads.component.html',\n  styleUrls: ['./threads.component.css']\n})\nexport class ThreadsComponent implements OnInit {\n  \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public threads: Contribution[];\n  logged:       boolean = false;\n  list;\n\n  constructor(\n    private route: Router,\n    private userService: UserService,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n\n        this.userService.getByEmail(this.userInfo.email).subscribe((response)=>{\n          console.log(\"user from email:\", response);\n        });\n      },\n      err =>  { this.logged = false }\n    );\n\n    // its just list data from here down\n    this.list = [\n      {\n        title: 'childless',\n        children: []\n      },\n      {\n        title: 'great grandparent',\n        children: [\n          {\n            title: 'childless grandsibiling',\n            children: []\n          },\n          {\n            title: 'grandparent',\n            children: [\n              {\n                title: 'childless sibiling',\n                children: []\n              },\n              {\n                title: 'another childless sibiling',\n                children: []\n              },\n              {\n                title: 'parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                  {\n                  title: 'another child',\n                  children: []\n                  },\n                ]\n              },\n              {\n                title: 'another parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                ]\n              },\n            ]\n          },\n          {\n            title: 'another grandparent',\n            children: [\n              {\n                title: 'parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                  {\n                    title: 'another child',\n                    children: []\n                  },\n                  {\n                    title: 'a third child',\n                    children: []\n                  },\n                  {\n                    title: 'teen mother',\n                    children: [\n                      {\n                        title: 'accident',\n                        children: []\n                      },\n                    ]\n                  },\n                ]\n              },\n            ]\n          },\n        ]\n      },\n    ];\n\n/*     this.userService.getThreads(this.userInfo.id).subscribe((response: Array<Contribution[]>) => {\n      this.threads = response[0];\n    }) */\n    // this.userService.getThreads(1).subscribe((response: Array<Contribution[]>) => {\n    //   console.log(\"threads from api\", response);\n    //   //this.threads = response[0];\n    // })\n    var contribution1: Contribution = {\n      id:               1,\n      title:            'first contriburtion',\n      url:              '',\n      content:          'this is the content',\n      user_id:          1,\n      created_at:       new Date(),\n      updated_at:       new Date(),\n      vote:             4,\n      c_type:           'ask'\n    };\n    var contribution2: Contribution = {\n      id:               2,\n      title:            'second contriburtion',\n      url:              'https://www.w3schools.com/html/',\n      content:          '',\n      user_id:          1,\n      created_at:       new Date(),\n      updated_at:       new Date(),\n      vote:             10,\n      c_type:           'url'\n    };\n    this.threads = [contribution1, contribution2];\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToReply(id: number) {\n    // to-do\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<ul>\n  <ng-template #recursiveList let-list>\n    <li *ngFor=\"let item of list\">\n      {{item.title}}\n      <ul *ngIf=\"item.children.length > 0\">\n        <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: item.children }\"></ng-container>\n      </ul>\n    </li>\n  </ng-template>\n  <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: list }\"></ng-container>\n</ul>\n\n\n\n<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" style=\"color: #FFFFFF\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" style=\"color: #FFFFFF\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of threads; index as i; first as isFirst\">\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\">{{contribution.created_at | dateAgo}}</a><!--<a href= \"/contributions/<%= contribution.id %>\" ><%= time_ago_in_words(contribution.created_at) %> ago</a>-->\n        </div>\n      </div>\n      <div class=\"row contributioncontent\">\n        {{contribution.content}}\n      </div>\n      <div class=\"row replybutton\">\n        <div class=\"reply\" (click)=\"redirectToReply(contribution.id)\"><u>reply</u></div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.interface';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-upvoted-comments',\n  templateUrl: './upvoted-comments.component.html',\n  styleUrls: ['./upvoted-comments.component.css']\n})\nexport class UpvotedCommentsComponent implements OnInit {\n  \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public threads: Contribution[];\n  logged:       boolean = false;\n  list;\n\n  constructor(\n    private route: Router,\n    private userService: UserService,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n\n        this.userService.getByEmail(this.userInfo.email).subscribe((response)=>{\n          console.log(\"user from email:\", response);\n        });\n      },\n      err =>  { this.logged = false }\n    );\n\n    // its just list data from here down\n    this.list = [\n      {\n        title: 'childless',\n        children: []\n      },\n      {\n        title: 'great grandparent',\n        children: [\n          {\n            title: 'childless grandsibiling',\n            children: []\n          },\n          {\n            title: 'grandparent',\n            children: [\n              {\n                title: 'childless sibiling',\n                children: []\n              },\n              {\n                title: 'another childless sibiling',\n                children: []\n              },\n              {\n                title: 'parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                  {\n                  title: 'another child',\n                  children: []\n                  },\n                ]\n              },\n              {\n                title: 'another parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                ]\n              },\n            ]\n          },\n          {\n            title: 'another grandparent',\n            children: [\n              {\n                title: 'parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                  {\n                    title: 'another child',\n                    children: []\n                  },\n                  {\n                    title: 'a third child',\n                    children: []\n                  },\n                  {\n                    title: 'teen mother',\n                    children: [\n                      {\n                        title: 'accident',\n                        children: []\n                      },\n                    ]\n                  },\n                ]\n              },\n            ]\n          },\n        ]\n      },\n    ];\n\n/*     this.userService.getThreads(this.userInfo.id).subscribe((response: Array<Contribution[]>) => {\n      this.threads = response[0];\n    }) */\n    // this.userService.getThreads(1).subscribe((response: Array<Contribution[]>) => {\n    //   console.log(\"threads from api\", response);\n    //   //this.threads = response[0];\n    // })\n    var contribution1: Contribution = {\n      id:               1,\n      title:            'first contriburtion',\n      url:              '',\n      content:          'this is the content',\n      user_id:          1,\n      created_at:       new Date(),\n      updated_at:       new Date(),\n      vote:             4,\n      c_type:           'ask'\n    };\n    var contribution2: Contribution = {\n      id:               2,\n      title:            'second contriburtion',\n      url:              'https://www.w3schools.com/html/',\n      content:          '',\n      user_id:          1,\n      created_at:       new Date(),\n      updated_at:       new Date(),\n      vote:             10,\n      c_type:           'url'\n    };\n    this.threads = [contribution1, contribution2];\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToReply(id: number) {\n    // to-do\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<ul>\n  <ng-template #recursiveList let-list>\n    <li *ngFor=\"let item of list\">\n      {{item.title}}\n      <ul *ngIf=\"item.children.length > 0\">\n        <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: item.children }\"></ng-container>\n      </ul>\n    </li>\n  </ng-template>\n  <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: list }\"></ng-container>\n</ul>\n\n\n\n<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{userInfo.name}}'s upvoted comments</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of threads; index as i; first as isFirst\">\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\">{{contribution.created_at | dateAgo}}</a><!--<a href= \"/contributions/<%= contribution.id %>\" ><%= time_ago_in_words(contribution.created_at) %> ago</a>-->\n        </div>\n      </div>\n      <div class=\"row contributioncontent\">\n        {{contribution.content}}\n      </div>\n      <div class=\"row replybutton\">\n        <div class=\"reply\" (click)=\"redirectToReply(contribution.id)\"><u>reply</u></div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.interface';\n\n@Component({\n  selector: 'app-upvoted-submissions',\n  templateUrl: './upvoted-submissions.component.html',\n  styleUrls: ['./upvoted-submissions.component.css']\n})\nexport class UpvotedSubmissionsComponent implements OnInit {\n    \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public contributions: Contribution[];\n  logged:       boolean = false;\n\n  constructor(\n    private route: Router,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n    private userService: UserService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        console.log(\"display name\", user.displayName);\n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n        this.userService.getByEmail(this.userInfo.email).subscribe((response: FirebaseUserModel) => {\n          console.log(\"user by email\", response);\n          this.userInfo.id = response.id;\n        })\n      },\n      err =>  { \n        this.logged = false;\n        this.redirectToNews();\n      }\n    );\n    this.userService.getUpvotedSubmissions(this.userInfo.id).subscribe((response: Array<Contribution[]>) => {\n      console.log(response);\n    })\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{userInfo.name}}'s upvoted submissions</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i; first as isFirst\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span> \n          (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\">{{contribution.created_at | dateAgo}}</a><!--<a href= \"/contributions/<%= contribution.id %>\" ><%= time_ago_in_words(contribution.created_at) %> ago</a>-->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">X comments</a> <!-- falta nombre de comentaris -->\n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { FirebaseUserService } from '../core/user.service';\nimport { User } from '../models/user.interface';\nimport { AuthService } from '../core/auth.service';\nimport { UserService } from '../services/user/user.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css'],\n})\nexport class UserInfoComponent implements OnInit {\n\n  userForm:     FormGroup;\n  loggedUser:   FirebaseUserModel = new FirebaseUserModel();\n  requestedUser:FirebaseUserModel = new FirebaseUserModel();\n\n  logged:       boolean = false;\n  isSubmitted:  boolean = false;\n  sameUser:     boolean = false;\n\n  constructor (\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private firebaseUserService: FirebaseUserService,\n    public authService: AuthService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.requestedUser.email = this.activatedRoute.snapshot.paramMap.get(\"email\");\n\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        // user logged\n        this.logged = true;\n        this.loggedUser.name                  = user.displayName; \n        this.loggedUser.email                 = user.email;\n        this.loggedUser.provider              = user.providerData[0].providerId;\n        user.getIdToken(true).then ( \n          idToken => { \n            this.loggedUser.google_token      = idToken; \n          } \n        );\n        \n        // same user\n        if (this.requestedUser.email == this.loggedUser.email) this.sameUser = true;\n      },\n      err =>  { \n       this.logged = false;\n      }\n    );\n    // user shown\n    this.userService.getByEmail(this.requestedUser.email).subscribe((response: FirebaseUserModel)=> {\n      console.log(\"requested user info:\", response);\n      this.requestedUser = response;\n    });\n    this.userForm = this.formBuilder.group({\n      about:  ['', [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    this.userService.updateUser(this.requestedUser.id, this.createUserForm().about).subscribe((response: FirebaseUserModel) => {\n      console.log(response);\n    })\n  }\n  private createUserForm(): FirebaseUserModel {\n    var updatedUser: FirebaseUserModel = {\n      name:                  this.requestedUser.name,\n      email:                 this.requestedUser.email,\n      provider:              this.requestedUser.provider,\n      id:                    this.requestedUser.id,\n      created_at:            this.requestedUser.created_at,\n      updated_at:            new Date(),\n      google_token:          this.requestedUser.google_token,\n      google_refresh_token:  this.requestedUser.google_refresh_token,\n      about:                 this.userForm.value,\n      api_key:               this.requestedUser.api_key,\n      karma:                 this.requestedUser.karma,\n    }\n    return updatedUser;\n  }\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  redirectToNews()    { this.router.navigate(['/news']);     }\n  redirectToNewest()  { this.router.navigate(['/newest']);   }\n  redirectToThreads() { this.router.navigate(['/threads']);  }\n  redirectToAskOnly() { this.router.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.router.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.router.navigate(['/login']);    }\n\n  redirectToUserInfo(email: string) {\n    this.router.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.router.navigate(['/contributioninfo', id]);\n  }\n  redirectToSubmitted()           { this.router.navigate(['/submitted'])          };\n  redirectToUpvotedSubmissions()  { this.router.navigate(['/upvotedsubmissions']) };\n  redirectToUpvotedComments()     { this.router.navigate(['/upvotedcomments'])    };\n\n  get formControls() { return this.userForm.controls; }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\">\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">user:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.name}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">created:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.created_at | dateAgo}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">karma:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.karma}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">about:</div>\n        <div class=\"col fieldvalue\" *ngIf=\"logged; else notLoggedAbout\">\n          <textarea\n            style=\"border-radius:2em;\"\n            type=\"textarea\" \n            class=\"form-control\" \n            id=\"about\" \n            formControlName=\"about\"\n            placeholder= \"{{ requestedUser.about }}\"\n            name=\"about\"\n          ></textarea>\n        </div>\n        <ng-template #notLoggedAbout>\n          <div class=\"col fieldvalue\">{{requestedUser.about}}</div>\n        </ng-template>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\">email:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.email}}</div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\">api key:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.api_key}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToSubmitted()\">submitted</u>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToThreads()\">comments</u>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToUpvotedSubmissions()\">upvoted submissions</u>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToUpvotedComments()\">upvoted comments</u> \n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">update</button>  <!-- <%if (logged_in?) && current_user.id == @user.id %> -->        \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1\"> </div>\n        <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">\n          Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://glacial-atoll-33184.herokuapp.com',\n  //API_URL: 'http://54.81.157.185:8080'\n  firebase: {\n    apiKey: \"AIzaSyDsGncrZFM3qxYVq7EBAuqXpGN30UvCU8k\",\n    authDomain: \"hacker-news-asw.firebaseapp.com\",\n    databaseURL: \"https://hacker-news-asw.firebaseio.com\",\n    projectId: \"hacker-news-asw\",\n    storageBucket: \"hacker-news-asw.appspot.com\",\n    messagingSenderId: \"634881005621\",\n    appId: \"1:634881005621:web:27607b9b4fdda363dc397c\",\n    measurementId: \"G-V0R0H0VRJK\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}