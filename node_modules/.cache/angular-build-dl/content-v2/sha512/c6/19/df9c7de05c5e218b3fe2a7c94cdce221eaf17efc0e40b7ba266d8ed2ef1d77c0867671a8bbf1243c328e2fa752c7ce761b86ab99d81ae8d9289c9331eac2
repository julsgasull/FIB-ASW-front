{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ask-only/ask-only.component.ts","webpack:///src/app/ask-only/ask-only.component.html","webpack:///src/app/contribution-info/contribution-info.component.ts","webpack:///src/app/contribution-info/contribution-info.component.html","webpack:///src/app/core/auth.service.ts","webpack:///src/app/core/user.model.ts","webpack:///src/app/core/user.service.ts","webpack:///src/app/models/contribution.model.ts","webpack:///src/app/newest/newest.component.ts","webpack:///src/app/newest/newest.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/pipes/date-ago.pipe.ts","webpack:///src/app/services/contribution/contribution.remote.ts","webpack:///src/app/services/contribution/contribution.service.ts","webpack:///src/app/services/user/user.remote.ts","webpack:///src/app/services/user/user.service.ts","webpack:///src/app/submit/submit.component.ts","webpack:///src/app/submit/submit.component.html","webpack:///src/app/submitted/submitted.component.ts","webpack:///src/app/submitted/submitted.component.html","webpack:///src/app/threads/threads.component.ts","webpack:///src/app/threads/threads.component.html","webpack:///src/app/upvoted-comments/upvoted-comments.component.ts","webpack:///src/app/upvoted-comments/upvoted-comments.component.html","webpack:///src/app/upvoted-submissions/upvoted-submissions.component.ts","webpack:///src/app/upvoted-submissions/upvoted-submissions.component.html","webpack:///src/app/user-info/user-info.component.ts","webpack:///src/app/user-info/user-info.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","AppModule","declarations","providers","bootstrap","AskOnlyComponent","route","contributionService","authService","userService","userInfo","logged","email","localStorage","getItem","console","log","getByEmail","subscribe","response","getAskRelatedToUser","contributions","getAskOnly","contribution_id","voteContribution","api_key","location","reload","unvoteContribution","confirm","deleteContribution","useremail","navigate","doGoogleAuth","res","setItem","additionalUserInfo","profile","err","doLogout","redirectToNews","redirectToNewest","redirectToAskOnly","ContributionInfoComponent","activatedRoute","formBuilder","loggedUser","contributionsUser","contribution","isSubmitted","parseInt","snapshot","paramMap","get","getContributionByIdRelatedToUser","getById","user_id","getContributionById","commentForm","group","comment","valid","addComment","createCommentForm","alert","commentFormValue","JSON","parse","stringify","value","content","c_type","controls","redirectToUserInfo","redirectToContributionInfo","AuthService","afAuth","reject","provider","GoogleAuthProvider","addScope","signInWithPopup","currentUser","signOut","providedIn","FirebaseUserModel","name","created_at","Date","updated_at","google_token","google_refresh_token","about","karma","FirebaseUserService","db","user","onAuthStateChanged","updateProfile","displayName","photoURL","Contribution","url","username","numcomments","vote","isvoted","NewestComponent","getNewestRelatedToUser","getNewest","NewsComponent","getContributionsRelatedToUser","getContributions","DateAgoPipe","args","seconds","Math","floor","intervals","counter","i","pure","ContributionRemote","httpClient","options","headers","set","API_URL","post","comment_id","reply","put","ContributionService","contributionRemote","isVoted","createContribution","replyComment","UserRemote","UserService","userRemote","getSubmitted","getUpvotedSubmissions","getUpvotedComments","getThreads","updateUser","SubmitComponent","redirectToLogin","contributionForm","required","minLength","createContributionForm","contributionFormValue","onSubmit","SubmittedComponent","firebaseUserService","getCurrentUser","providerData","providerId","ThreadsComponent","list","children","contribution1","contribution2","threads","UpvotedCommentsComponent","UpvotedSubmissionsComponent","UserInfoComponent","router","requestedUser","sameUser","userForm","createUserForm","redirectToSubmitted","redirectToThreads","environment","production","firebase","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewsComponent } from './news/news.component';\nimport { NewestComponent } from './newest/newest.component';\nimport { ThreadsComponent } from './threads/threads.component';\nimport { AskOnlyComponent } from './ask-only/ask-only.component';\nimport { SubmitComponent } from './submit/submit.component';\nimport { SubmittedComponent } from './submitted/submitted.component';\nimport { UpvotedCommentsComponent } from './upvoted-comments/upvoted-comments.component';\nimport { UpvotedSubmissionsComponent } from './upvoted-submissions/upvoted-submissions.component';\nimport { ContributionInfoComponent } from './contribution-info/contribution-info.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\nconst routes: Routes = [\n  { path: '',                     component: NewsComponent,               },\n  { path: 'news',                 component: NewsComponent,               },\n  { path: 'newest',               component: NewestComponent,             },\n  { path: 'threads',              component: ThreadsComponent,            },\n  { path: 'askonly',              component: AskOnlyComponent             },\n  { path: 'submit',               component: SubmitComponent              },\n  { path: 'submitted',            component: SubmittedComponent           },\n  { path: 'upvotedsubmissions',   component: UpvotedSubmissionsComponent  },\n  { path: 'upvotedcomments',      component: UpvotedCommentsComponent     },\n  { path: 'userinfo/:email',      component: UserInfoComponent            },\n  { path: 'contributioninfo/:id', component: ContributionInfoComponent    },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'HackerNews';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NewsComponent } from './news/news.component';\nimport { NewestComponent } from './newest/newest.component';\nimport { ThreadsComponent } from './threads/threads.component';\nimport { AskOnlyComponent } from './ask-only/ask-only.component';\nimport { SubmitComponent } from './submit/submit.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DateAgoPipe } from './pipes/date-ago.pipe';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { ContributionService } from './services/contribution/contribution.service';\nimport { ContributionRemote } from './services/contribution/contribution.remote';\nimport { UserRemote } from './services/user/user.remote';\nimport { UserService } from './services/user/user.service';\nimport { SubmittedComponent } from './submitted/submitted.component';\nimport { UpvotedSubmissionsComponent } from './upvoted-submissions/upvoted-submissions.component';\nimport { UpvotedCommentsComponent } from './upvoted-comments/upvoted-comments.component';\nimport { ContributionInfoComponent } from './contribution-info/contribution-info.component';\nimport { UserInfoComponent } from './user-info/user-info.component';\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyDsGncrZFM3qxYVq7EBAuqXpGN30UvCU8k\",\n  authDomain: \"hacker-news-asw.firebaseapp.com\",\n  databaseURL: \"https://hacker-news-asw.firebaseio.com\",\n  projectId: \"hacker-news-asw\",\n  storageBucket: \"hacker-news-asw.appspot.com\",\n  messagingSenderId: \"634881005621\",\n  appId: \"1:634881005621:web:27607b9b4fdda363dc397c\",\n  measurementId: \"G-V0R0H0VRJK\"\n};\nAngularFireModule.initializeApp(firebaseConfig);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewsComponent,\n    NewestComponent,\n    ThreadsComponent,\n    AskOnlyComponent,\n    SubmitComponent,\n    DateAgoPipe,\n    SubmittedComponent,\n    UpvotedSubmissionsComponent,\n    UpvotedCommentsComponent,\n    ContributionInfoComponent,\n    UserInfoComponent,\n  ],\n  imports: [\n    //AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    ContributionRemote,\n    ContributionService,\n    UserRemote,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-ask-only',\n  templateUrl: './ask-only.component.html',\n  styleUrls: ['./ask-only.component.css']\n})\nexport class AskOnlyComponent implements OnInit {\n\n  public userInfo:          FirebaseUserModel = new FirebaseUserModel();\n  public contributions:     Contribution[];\n  public logged:            boolean           = false;\n\n constructor (\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n  ) { this.userInfo.email = localStorage.getItem('loggedUserEmail'); }\n\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.userInfo.email != \"\") {\n      this.logged = true;   console.log(\"logged user:\", this.userInfo.email); \n      // get user\n      this.userService.getByEmail(this.userInfo.email).subscribe((response:FirebaseUserModel) => {\n        this.userInfo = response;\n        this.contributionService.getAskRelatedToUser(this.userInfo.id).subscribe((response: Contribution[]) => {\n          this.contributions = response; \n          console.log(\"contribucions related to user\", this.userInfo.email, \":\", this.contributions);\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;    console.log(\"no logged user\"); \n      this.contributionService.getAskOnly().subscribe((response: Array<Contribution[]>) => {\n        this.contributions = response[0]; \n        console.log(\"contribucions with no user:\", this.contributions);\n      })\n    }\n  }\n\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.userInfo.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToUserInfo(useremail: string)   { this.route.navigate(['/userinfo', useremail]);  }\n  redirectToContributionInfo(id: number)  { this.route.navigate(['/contributioninfo', id]); }\n  redirectToNews()                        { this.route.navigate(['/news']);                 }\n  redirectToNewest()                      { this.route.navigate(['/newest']);               }\n  redirectToThreads()                     { this.route.navigate(['/threads']);              }\n  redirectToAskOnly()                     { this.route.navigate(['/askonly']);              }\n  redirectToSubmit()                      { this.route.navigate(['/submit']);               }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(res => {localStorage.setItem('loggedUserEmail', \"\")})\n    location.reload();\n  }\n}\n","<div class=\"container\" >\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" style=\"color: #FFFFFF;\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i;\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n        <span *ngIf=\"logged; else notLoggedVote\">\n          <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n            <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>\n          <ng-template #notVoted>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>          \n          </ng-template>\n        </span>\n        <ng-template #notLoggedVote>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n          </span> \n        </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">AskHN: {{contribution.title}}</a>\n        <span>\n          <a (click)=\"redirectToNews()\">\n            <span class=\"sitestr\">\n              &nbsp;({{ (contribution.url.length>30)? (contribution.url | slice:0:30)+'...':(contribution.url) }})\n            </span>\n          </a>\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comment(s)</a> \n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==userInfo.name\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.interface';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-contribution-info',\n  templateUrl: './contribution-info.component.html',\n  styleUrls: ['./contribution-info.component.css']\n})\nexport class ContributionInfoComponent implements OnInit {\n\n  public loggedUser:        FirebaseUserModel = new FirebaseUserModel();\n  public contributionsUser: FirebaseUserModel = new FirebaseUserModel();\n  public contribution:      Contribution      = new Contribution();\n  logged:                   boolean           = false;\n  isSubmitted:              boolean           = false;\n  commentForm:              FormGroup;\n\n  constructor(\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private activatedRoute:       ActivatedRoute,\n    private userService:          UserService,\n    private formBuilder:          FormBuilder\n  ) { this.contribution.id = parseInt(this.activatedRoute.snapshot.paramMap.get(\"id\"), 10);  }\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.loggedUser.email != \"\") {\n      this.logged = true;     console.log(\"logged user:\", this.loggedUser.email); \n      // get user\n      this.userService.getByEmail(this.loggedUser.email).subscribe((response:FirebaseUserModel) => {\n        console.log(\"logged user from getbyemail:\", response);\n        this.loggedUser = response;\n        this.contributionService.getContributionByIdRelatedToUser(this.contribution.id, this.loggedUser.id).subscribe((response: Contribution[]) => {\n          console.log(\"contribution by id\", response[0]);\n          this.contribution = response[0];\n          this.userService.getById(this.contribution.user_id).subscribe((response: FirebaseUserModel) => {\n            console.log(\"contribution by id - user\", response);\n            this.contributionsUser = response;\n          });\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;    console.log(\"no logged user\"); \n      this.contributionService.getContributionById(this.contribution.id).subscribe((response: Contribution[]) => {\n        console.log(\"contribution by id\", response[0]);\n        this.contribution = response[0];\n        this.userService.getById(this.contribution.user_id).subscribe((response: FirebaseUserModel) => {\n          console.log(\"contribution by id - user\", response);\n          this.contributionsUser = response;\n        });\n      })\n    }\n\n    //form\n    this.commentForm = this.formBuilder.group({comment:['', ] });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.commentForm.valid) {\n      this.contributionService.addComment(this.contribution.id, this.createCommentForm(), this.loggedUser.api_key).subscribe((response: Contribution) => {\n        this.route.navigate(['/contributioninfo', response.id]);\n      })\n    } else {\n      alert(\"your commnent could not be created, try again.\")\n    }\n  }\n\n  private createCommentForm(): Contribution {\n    const commentFormValue = JSON.parse(JSON.stringify(this.commentForm.value));\n    var comment: Contribution = new Contribution();\n    comment.content           = commentFormValue.comment;\n    comment.user_id           = this.loggedUser.id;\n    comment.c_type            = \"comment\";\n    console.log(\"mycomment\", comment);\n    return comment;\n  }\n\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.loggedUser.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.loggedUser.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n  redirectToUserInfo(useremail: string)   { this.route.navigate(['/userinfo', useremail]);  }\n  redirectToContributionInfo(id: number)  { this.route.navigate(['/contributioninfo', id]); }\n  redirectToNews()                        { this.route.navigate(['/news']);                 }\n  redirectToNewest()                      { this.route.navigate(['/newest']);               }\n  redirectToThreads()                     { this.route.navigate(['/threads']);              }\n  redirectToAskOnly()                     { this.route.navigate(['/askonly']);              }\n  redirectToSubmit()                      { this.route.navigate(['/submit']);               }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(res => {localStorage.setItem('loggedUserEmail', \"\")})\n    location.reload();\n  }\n\n  get formControls() { return this.commentForm.controls; }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row content\">\n    <div class=\"col-12\">\n      <div class=\"row\" style=\"color:#F6F6F0;\">.</div>\n      <div class=\"row contributioninfo\">\n        <div class=\"col-1 vote\">\n          <span *ngIf=\"logged; else notLoggedVote\">\n            <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n              <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>\n            <ng-template #notVoted>\n              <span class=\"imageClass vote\">\n                <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n              </span>          \n            </ng-template>\n          </span>\n          <ng-template #notLoggedVote>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n            </span> \n          </ng-template>\n        </div>\n        <div class=\"col contributioninfo\">\n          <div class=\"row contributiontitle\">\n            <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n            <span> \n              (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n            </span>\n          </div>\n          <div class=\"row contributiondetails\">\n            <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n            <div class=\"col contributiondetailsitem\">&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">by</div>\n            <div class=\"col contributiondetailsitem\">&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a (click)=\"redirectToUserInfo(contributionsUser.email)\">{{contributionsUser.name}}</a>\n            </div>\n            <div class=\"col contributiondetailsitem\">&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n                {{contribution.created_at | dateAgo}}\n              </a>\n            </div>\n            <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n            <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n            <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n            <div class=\"col contributiondetailsitem\">\n              <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comments</a> <!-- falta nombre de comentaris -->\n            </div>\n            <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n              &nbsp;|&nbsp;\n              <a (click)=\"delete(contribution.id)\">delete</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row commentbox\" *ngIf=\"logged\">\n        <form [formGroup]=\"commentForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">.</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\">\n              <textarea\n              style=\"border-radius:2em;\"\n              type=\"textarea\" \n              class=\"form-control\" \n              id=\"comment\" \n              formControlName=\"comment\"\n              placeholder= \"leave your comment here\"\n              name=\"comment\"\n              ></textarea>\n            </div>\n          </div>\n          <div class=\"row\" *ngIf=\"logged\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\">\n              <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">comment</button>  <!-- <%if (logged_in?) && current_user.id == @user.id %> -->        \n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-1 fieldname\"> </div>\n            <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">\n              Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"row comments\">I will be the comments --> wait until make threads view</div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n    \n  constructor (\n    public afAuth: AngularFireAuth\n  ) {}\n\n  doGoogleAuth() {\n    console.log(\"reached google auth\")\n    return new Promise<any>((resolve, reject) => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      firebase.auth()\n      .signInWithPopup(provider)\n      .then (\n        res => {\n          resolve(res);\n          console.log(\"made login\", res);\n        }, err => {\n          console.log(\"not login\", err);\n          reject(err);\n\n        }\n      )\n    })\n  }\n\n  doLogout() {\n    return new Promise((resolve, reject) => {\n      if (firebase.auth().currentUser) {\n        firebase.auth().signOut()\n        resolve();\n      } else reject();\n    });\n  }\n}","export class FirebaseUserModel {\n  name:     string;\n  email:    string;\n  provider: string;\n\n  // new\n  id:                    number;\n  created_at:            Date;\n  updated_at:            Date;\n  google_token:          string;\n  google_refresh_token:  string;\n  about:                 string;\n  api_key:               string;\n  karma:                 number;\n\n  constructor() {\n    this.name     = \"\";\n    this.email    = \"\";\n    this.provider = \"\";\n\n    // new\n    this.id                   = 0;\n    this.created_at           = new Date();\n    this.updated_at           = new Date();\n    this.google_token         = \"\";\n    this.google_refresh_token = \"\";\n    this.about                = \"\";\n    this.api_key              = \"\";\n    this.karma                = 0;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseUserService {\n\n  constructor (\n    public db: AngularFirestore,\n    public afAuth: AngularFireAuth\n  ) {}\n  \n  getCurrentUser() {\n    return new Promise<any>((resolve, reject) => {\n      var user = firebase.auth().onAuthStateChanged(\n        function(user) {\n          if (user) resolve(user);\n          else      reject('No user logged in');\n        }\n      )\n    })\n  }\n\n  updateCurrentUser(value) {\n    return new Promise<any>((resolve, reject) => {\n      var user = firebase.auth().currentUser;\n      user.updateProfile({\n        displayName: value.name,\n        photoURL: user.photoURL\n      }).then (\n        res => { resolve(res) }, \n        err => reject(err)\n      )\n    })\n  }\n}","export class Contribution {\n  id?:               number;\n  title?:           string;\n  url?:             string;\n  content?:         string;\n  contribution_id?: number;\n  user_id:          number;\n  username?:        string;\n  useremail?:       string;\n  contributions?:   Contribution;\n  numcomments?:     number;\n  created_at:       Date;\n  updated_at:       Date;\n  vote:             number;\n  c_type:           string;\n  isvoted:          boolean;\n\n  constructor() {\n    this.id               = -1;\n    this.title            = \"\";\n    this.url              = \"\";\n    this.contribution_id  = -1;\n    this.content          = \"\";\n    this.user_id          = -1;\n    this.username         = \"\";\n    this.useremail        = \"\";\n    this.contributions    = null;\n    this.numcomments      = -1;\n    this.created_at       = new Date();\n    this.updated_at       = new Date();\n    this.vote             = 0;\n    this.c_type           = \"\";\n    this.isvoted          = false;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Contribution } from '../models/contribution.model';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.interface';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-newest',\n  templateUrl: './newest.component.html',\n  styleUrls: ['./newest.component.css']\n})\nexport class NewestComponent implements OnInit {\n\n  public userInfo:          FirebaseUserModel = new FirebaseUserModel();\n  public contributions:     Contribution[];\n  public logged:            boolean           = false;\n\n\n  constructor (\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n  ) { this.userInfo.email = localStorage.getItem('loggedUserEmail'); }\n\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.userInfo.email != \"\") {\n      this.logged = true;   console.log(\"logged user:\", this.userInfo.email); \n      // get user\n      this.userService.getByEmail(this.userInfo.email).subscribe((response:FirebaseUserModel) => {\n        this.userInfo = response;\n        this.contributionService.getNewestRelatedToUser(this.userInfo.id).subscribe((response: Contribution[]) => {\n          this.contributions = response; \n          console.log(\"contribucions related to user\", this.userInfo.email, \":\", this.contributions);\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;    console.log(\"no logged user\"); \n      this.contributionService.getNewest().subscribe((response: Array<Contribution[]>) => {\n        this.contributions = response[0]; \n        console.log(\"contribucions with no user:\", this.contributions);\n      })\n    }\n  }\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.userInfo.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n  redirectToUserInfo(useremail: string)   { this.route.navigate(['/userinfo', useremail]);  }\n  redirectToContributionInfo(id: number)  { this.route.navigate(['/contributioninfo', id]); }\n  redirectToNews()                        { this.route.navigate(['/news']);                 }\n  redirectToNewest()                      { this.route.navigate(['/newest']);               }\n  redirectToThreads()                     { this.route.navigate(['/threads']);              }\n  redirectToAskOnly()                     { this.route.navigate(['/askonly']);              }\n  redirectToSubmit()                      { this.route.navigate(['/submit']);               }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(res => {localStorage.setItem('loggedUserEmail', \"\")})\n    location.reload();\n  }\n}\n","<div class=\"container\" >\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" style=\"color: #FFFFFF;\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i;\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n        <span *ngIf=\"logged; else notLoggedVote\">\n          <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n            <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>\n          <ng-template #notVoted>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>          \n          </ng-template>\n        </span>\n        <ng-template #notLoggedVote>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n          </span> \n        </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span>\n          <a (click)=\"redirectToNews()\">\n            <span class=\"sitestr\">\n              &nbsp;({{ (contribution.url.length>30)? (contribution.url | slice:0:30)+'...':(contribution.url) }})\n            </span>\n          </a>\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comment(s)</a> \n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==userInfo.name\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { Router } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.scss']\n})\nexport class NewsComponent implements OnInit {\n  \n  public userInfo:          FirebaseUserModel = new FirebaseUserModel();\n  public contributions:     Contribution[];\n  public logged:            boolean           = false;\n  \n  constructor (\n    private route:                Router,\n    private contributionService:  ContributionService,\n    private authService:          AuthService,\n    private userService:          UserService,\n  ) { this.userInfo.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.userInfo.email != \"\") {\n      this.logged = true;   console.log(\"logged user:\", this.userInfo.email); \n      // get user\n      this.userService.getByEmail(this.userInfo.email).subscribe((response:FirebaseUserModel) => {\n        this.userInfo = response;\n        this.contributionService.getContributionsRelatedToUser(this.userInfo.id).subscribe((response: Contribution[]) => {\n          this.contributions = response; \n          console.log(\"contribucions related to user\", this.userInfo.email, \":\", this.contributions);\n        })\n      })\n    } \n    // if there is no user\n    else { \n      this.logged = false;    console.log(\"no logged user\"); \n      this.contributionService.getContributions().subscribe((response: Array<Contribution[]>) => {\n        this.contributions = response[0]; \n        console.log(\"contribucions with no user:\", this.contributions);\n      })\n    }\n  }\n\n  vote(contribution_id: number) {\n    this.contributionService.voteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }  \n  unvote(contribution_id: number) {\n    this.contributionService.unvoteContribution(contribution_id, this.userInfo.api_key).subscribe((response)=>{\n      location.reload();\n    });\n  }\n  delete(contribution_id: number) {\n    if (confirm(\"Are you sure?\")) {\n      this.contributionService.deleteContribution(contribution_id, this.userInfo.api_key).subscribe((response) => {\n        location.reload();\n      });\n    }\n  }\n\n  redirectToUserInfo(useremail: string)   { this.route.navigate(['/userinfo', useremail]);  }\n  redirectToContributionInfo(id: number)  { this.route.navigate(['/contributioninfo', id]); }\n  redirectToNews()                        { this.route.navigate(['/news']);                 }\n  redirectToNewest()                      { this.route.navigate(['/newest']);               }\n  redirectToThreads()                     { this.route.navigate(['/threads']);              }\n  redirectToAskOnly()                     { this.route.navigate(['/askonly']);              }\n  redirectToSubmit()                      { this.route.navigate(['/submit']);               }\n  redirectToLogin()   {\n    console.log(\"redirect to login reached\");\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        console.log(\"login worked\");\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        //location.reload();\n      },\n      err => {\n        console.log(\"login did not work\");\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        //location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(res => {localStorage.setItem('loggedUserEmail', \"\")})\n    location.reload();\n  }\n}\n","<div class=\"container\" >\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i;\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n        <span *ngIf=\"logged; else notLoggedVote\">\n          <span class=\"imageClass vote\"  *ngIf=\"contribution.isvoted; else notVoted\" >\n            <img src=\"../../assets/images/downvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>\n          <ng-template #notVoted>\n            <span class=\"imageClass vote\">\n              <img src=\"../../assets/images/upvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n            </span>          \n          </ng-template>\n        </span>\n        <ng-template #notLoggedVote>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n          </span> \n        </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span>\n          <a (click)=\"redirectToNews()\">\n            <span class=\"sitestr\">\n              &nbsp;({{ (contribution.url.length>30)? (contribution.url | slice:0:30)+'...':(contribution.url) }})\n            </span>\n          </a>\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(contribution.useremail)\">{{contribution.username}}</a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\" (click)=\"redirectToContributionInfo(contribution.id)\">\n            {{contribution.created_at | dateAgo}}\n          </a>\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">{{contribution.numcomments}} comment(s)</a> \n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged && contribution.numcomments==0 && contribution.username==userInfo.name\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'dateAgo',\n    pure: true\n})\nexport class DateAgoPipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        if (value) {\n            const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n            if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\n                return 'just now';\n            const intervals = {\n                'year': 31536000,\n                'month': 2592000,\n                'week': 604800,\n                'day': 86400,\n                'hour': 3600,\n                'minute': 60,\n                'second': 1\n            };\n            let counter;\n            for (const i in intervals) {\n                counter = Math.floor(seconds / intervals[i]);\n                if (counter > 0)\n                    if (counter === 1) {\n                        return counter + ' ' + i + ' ago'; // singular (1 day ago)\n                    } else {\n                        return counter + ' ' + i + 's ago'; // plural (2 days ago)\n                    }\n            }\n        }\n        return value;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Contribution } from '../../models/contribution.model';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ContributionRemote {\n  \n  constructor (\n    private httpClient: HttpClient\n  ) {}\n  private options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n\n  /* ==== GET ==== */\n  getContributions(): Observable<Array<Contribution[]>> {\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions`, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getContributionsRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/contributions/withvotes/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getNewest(): Observable<Array<Contribution[]>> {\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions/newest`, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getNewestRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/contributions/withvotes/newest/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })  \n  }\n  getAskOnly(): Observable<Array<Contribution[]>> {\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/contributions/askonly`,     \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getAskRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/contributions/withvotes/askonly/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })  \n  }\n  getContributionById(id: number): Observable<Contribution[]> {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/contributions/` + id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getContributionByIdRelatedToUser(contribution_id: number, user_id: number): Observable<Contribution[]> {\n    return this.httpClient.get<Contribution[]>(`${environment.API_URL}/contributions/` + contribution_id + `/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  isVoted(user_id: number, contribution_id: number): Observable<boolean> {\n    return this.httpClient.get<boolean>(`${environment.API_URL}/votes/isvoted/`+ contribution_id +`/` + user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n\n  /* ==== POST ==== */\n  createContribution(contribution: Contribution, api_key: string): Observable<Contribution> {\n    return this.httpClient.post<Contribution>(`${environment.API_URL}/contributions`, \n    {   \n      'title':   contribution.title,\n      'url':     contribution.url,\n      'content': contribution.content\n    },\n    {       \n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      }  \n    });\n  }\n  addComment(id: number, comment: Contribution, api_key: string): Observable<Contribution> {\n    return this.httpClient.post<Contribution>(`${environment.API_URL}/contributions/`+ id, \n    {\n      'content':  comment.content\n    },\n    { \n      headers: { \n        'Accept':'application/json',\n        'API_KEY':api_key\n      } \n    });\n  }\n  replyComment(comment_id: number, reply: Contribution): Observable<Contribution> {\n    return this.httpClient.post<Contribution>(`${environment.API_URL}/contributions/` + comment_id + `/replyview`, \n    {\n      'content':  reply.content\n    }, \n    { headers: { 'Content-Type':\"application/json\" } });\n  }\n\n  /* ==== DELETE ==== */\n  deleteContribution(id: number, api_key: string): Observable<any> {\n    return this.httpClient.delete<any>(`${environment.API_URL}/contributions/` + id,\n    { \n      headers: { \n        'Accept':'application/json',\n        'API_KEY':api_key\n      } \n    });\n  }\n  unvoteContribution(contribution_id: number, api_key: string): Observable<any> {\n    return this.httpClient.delete<any>(`${environment.API_URL}/contributions/` + contribution_id + `/unvote`,\n    { \n      headers: { \n        'Accept':'application/json',\n        'API_KEY':api_key\n      } \n    });\n  }\n\n  /* ==== PUT ==== */\n  voteContribution(contribution_id:number, api_key: string): Observable<any> {\n    console.log(\"he llegado al remote\");\n    console.log(\"api key = \", api_key);\n    return this.httpClient.put<any>(`${environment.API_URL}/vote/` + contribution_id, {},\n    {\n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      } \n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { ContributionRemote } from './contribution.remote';\nimport { Observable } from 'rxjs';\nimport { Contribution } from 'src/app/models/contribution.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContributionService {\n\n  constructor (\n    private contributionRemote: ContributionRemote\n  ) { }\n\n  /* ==== GET ==== */\n  getContributions(): Observable<Array<Contribution[]>> { \n    // this gets all contributions with url\n    return this.contributionRemote.getContributions();\n  }\n  getContributionsRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.contributionRemote.getContributionsRelatedToUser(user_id);\n  }\n  getNewest(): Observable<Array<Contribution[]>> {\n    return this.contributionRemote.getNewest();\n  }\n  getNewestRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.contributionRemote.getNewestRelatedToUser(user_id);\n  }\n  getAskOnly(): Observable<Array<Contribution[]>> {\n    return this.contributionRemote.getAskOnly();\n  }\n  getAskRelatedToUser(user_id: number): Observable<Contribution[]> {\n    return this.contributionRemote.getAskRelatedToUser(user_id);\n  }\n  getContributionById(contribution_id: number): Observable<Contribution[]> {\n    return this.contributionRemote.getContributionById(contribution_id);\n  }\n  getContributionByIdRelatedToUser(contribution_id: number, user_id: number): Observable<Contribution[]> {\n    return this.contributionRemote.getContributionByIdRelatedToUser(contribution_id, user_id);\n  }\n  isVoted(user_id: number, contribution_id: number): Observable<boolean> {\n    return this.contributionRemote.isVoted(user_id, contribution_id);\n  }\n\n  /* ==== POST ==== */\n  createContribution(contribution: Contribution, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.createContribution(contribution, api_key);\n  }\n  addComment(id: number, comment: Contribution, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.addComment(id, comment, api_key);\n  }\n  replyComment(comment_id: number, reply: Contribution): Observable<Contribution> {\n    return this.contributionRemote.replyComment(comment_id, reply);\n  }\n\n  /* ==== DELETE ==== */\n  deleteContribution(id: number, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.deleteContribution(id, api_key);\n  }\n  unvoteContribution(contribution_id: number, api_key: string): Observable<any> {\n    return this.contributionRemote.unvoteContribution(contribution_id, api_key);\n  }\n\n  /* ==== PUT ==== */\n  voteContribution(contribution_id:number, api_key: string): Observable<Contribution> {\n    return this.contributionRemote.voteContribution(contribution_id, api_key);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/models/user.interface';\nimport { Contribution } from 'src/app/models/contribution.model';\nimport { FirebaseUserModel } from 'src/app/core/user.model';\n\n@Injectable()\nexport class UserRemote {\n  \n  constructor (\n    private httpClient: HttpClient\n  ) {}\n\n  /* ==== GET ==== */\n  getById(user_id: number): Observable<FirebaseUserModel> {\n    return this.httpClient.get<FirebaseUserModel>(`${environment.API_URL}/users/`+ user_id, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getByEmail(email: string): Observable<FirebaseUserModel> {\n    return this.httpClient.get<FirebaseUserModel>(`${environment.API_URL}/users/`+ email + `/byEmail`, \n    { \n      headers:{ 'Accept':'application/json' } \n    })\n  }\n  getSubmitted(user_id: number): Observable<Array<Contribution[]>> {\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/users/submitted/` + user_id);\n  }\n  getUpvotedSubmissions(user_id: number): Observable<Array<Contribution[]>> { //FIX THIS SHIT\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/users/upvotedsubmissions/` + user_id);\n  }\n  getUpvotedComments(user_id: number): Observable<Array<Contribution[]>> { //FIX THIS SHIT\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/users/upvotedcomments/` + user_id);\n  }\n  getThreads(user_id: number): Observable<Array<Contribution[]>> { //FIX THIS SHIT\n    return this.httpClient.get<Array<Contribution[]>>(`${environment.API_URL}/users/threads/` + user_id);\n  }\n\n  /* ==== POST ==== */\n  updateUser(user_id: number, about: string, api_key: string): Observable<FirebaseUserModel> {\n    return this.httpClient.post<FirebaseUserModel>(`${environment.API_URL}/users/` + user_id, \n    {\n      'about': about\n    },\n    {       \n      headers: { \n        'Accept':'application/json',\n        'API_KEY': api_key\n      }  \n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { UserRemote } from './user.remote';\nimport { Contribution } from '../../models/contribution.model';\nimport { Observable } from 'rxjs';\nimport { FirebaseUserModel } from '../../core/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor (\n    private userRemote: UserRemote\n  ) { }\n  \n  /* ==== GET ==== */\n  getById(user_id: number): Observable<FirebaseUserModel> {\n    return this.userRemote.getById(user_id);\n  }\n  getSubmitted(user_id: number): Observable<Array<Contribution[]>> {\n    return this.userRemote.getSubmitted(user_id);    \n  }\n  getUpvotedSubmissions(user_id: number): Observable<Array<Contribution[]>> { \n    return this.userRemote.getUpvotedSubmissions(user_id);  \n  }\n  getUpvotedComments(user_id: number): Observable<Array<Contribution[]>> { \n    return this.userRemote.getUpvotedComments(user_id);  \n  }\n  getThreads(user_id: number): Observable<Array<Contribution[]>> { \n    return this.userRemote.getThreads(user_id);  \n  }\n  getByEmail(email: string): Observable<FirebaseUserModel> {\n    return this.userRemote.getByEmail(email);\n  }\n\n  /* ==== POST ==== */\n  updateUser(user_id: number, about: string, api_key: string): Observable<FirebaseUserModel> {\n    return this.userRemote.updateUser(user_id, about, api_key);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Contribution } from '../models/contribution.model';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { CustomValidators } from 'ng2-validation';\nimport { AuthService } from '../core/auth.service';\nimport { UserService } from '../services/user/user.service';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'app-submit',\n  templateUrl: './submit.component.html',\n  styleUrls: ['./submit.component.css']\n})\nexport class SubmitComponent implements OnInit {\n  \n  public isSubmitted:      boolean            = false;\n  public contributionForm: FormGroup;\n  public userInfo:         FirebaseUserModel = new FirebaseUserModel();\n    \n  constructor(\n    private formBuilder:          FormBuilder, \n    private contributionService:  ContributionService,\n    private route:                Router,\n    private userService:          UserService,\n    private authService:          AuthService,\n  ) { this.userInfo.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    // if the user is logged\n    if (this.userInfo.email != \"\") {\n      this.userService.getByEmail(this.userInfo.email).subscribe(\n        (response:FirebaseUserModel) => {\n          this.userInfo = response;\n        }\n      );\n    } else this.redirectToLogin();\n    this.contributionForm = this.formBuilder.group({\n      title:  ['', [Validators.required, Validators.minLength(4)]],\n      url:    ['', [Validators.minLength(4), CustomValidators.url]],\n      content:['', ]\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    if (this.contributionForm.valid) {\n      this.contributionService.createContribution(this.createContributionForm(), this.userInfo.api_key).subscribe(\n        (response: any) => {\n          this.route.navigate(['/contributioninfo', response.contribution.id]);\n        }\n      )\n    } else {\n      alert(\"your contriburtion could not be created, try again.\")\n    }\n  }\n\n  private createContributionForm(): Contribution {\n    const contributionFormValue = JSON.parse(JSON.stringify(this.contributionForm.value));\n    var contribution: Contribution = new Contribution();\n    contribution.title   = contributionFormValue.title;\n    contribution.url     = contributionFormValue.url;\n    contribution.content = contributionFormValue.content;\n    contribution.user_id = this.userInfo.id;\n    return contribution;\n  }\n\n  get formControls() { return this.contributionForm.controls; }\n  \n  redirectToNews() {\n    this.route.navigate(['/news']);\n  }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\"> Submit</span>\n    </div>\n  </div>\n  <div class=\"row content\">\n    <form [formGroup]=\"contributionForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">title</div>\n        <div class=\"col\"[ngClass]=\"{'has-error': isSubmitted === true && formControls.title.errors}\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"text\" \n            class=\"form-control\" \n            id=\"title\" \n            formControlName=\"title\"\n            name=\"title\"\n            required\n          >\n          <span *ngIf=\"isSubmitted && formControls.title.errors\"> \n            <div class=\"error-message\" *ngIf=\"formControls.title.errors.required\">Title can't be blank</div> \n            <div class=\"error-message\" *ngIf=\"formControls.title.errors.minlength\">Title is too short (minimum is 4 characters)</div>\n          </span> \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">url</div>\n        <div class=\"col\" [ngClass]=\"{'has-error': isSubmitted === true && formControls.url.errors}\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"text\" \n            class=\"form-control\" \n            id=\"url\" \n            formControlName=\"url\"\n            name=\"url\"\n          >\n          <span *ngIf=\"isSubmitted && formControls.url.errors\"> \n            <div class=\"error-message\" *ngIf=\"formControls.url.errors.minlength\">Url is too short (minimum is 4 characters)</div>\n            <div class=\"error-message\" *ngIf=\"formControls.url.errors?.url\">Url is invalid</div>\n          </span> \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">text</div>\n        <div class=\"col\">\n          <input\n            style=\"border-radius:2em;\"\n            type=\"textarea\" \n            class=\"form-control\" \n            id=\"content\" \n            formControlName=\"content\"\n            name=\"content\"\n          >\n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1\" style=\"color:#F6F6F0\">.</div>\n        <div class=\"col-11\">\n          <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">submit</button>\n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1\" style=\"color:#F6F6F0\">.</div>\n        <div class=\"col-11\">\n          Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via <a href=\"https://news.ycombinator.com/bookmarklet.html\" rel=\"nofollow\"><u>bookmarklet</u></a>.\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.model';\nimport { Router } from '@angular/router';\nimport { ContributionService } from '../services/contribution/contribution.service';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-submitted',\n  templateUrl: './submitted.component.html',\n  styleUrls: ['./submitted.component.css']\n})\nexport class SubmittedComponent implements OnInit {\n    \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public contributions: Contribution[];\n  logged:       boolean = false;\n\n  constructor(\n    private route: Router,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n    private userService: UserService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        console.log(\"display name\", user.displayName);\n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n        this.userService.getByEmail(this.userInfo.email).subscribe((response: FirebaseUserModel) => {\n          console.log(\"user by email\", response);\n          this.userInfo.id = response.id;\n        })\n      },\n      err =>  { \n        this.logged = false;\n        this.redirectToNews();\n      }\n    );\n    this.userService.getSubmitted(this.userInfo.id).subscribe((response: Array<Contribution[]>) => {\n      console.log(response);\n    })\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{userInfo.name}}'s submissions</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i; first as isFirst\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span> \n          (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\">{{contribution.created_at | dateAgo}}</a><!--<a href= \"/contributions/<%= contribution.id %>\" ><%= time_ago_in_words(contribution.created_at) %> ago</a>-->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">X comments</a> <!-- falta nombre de comentaris -->\n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.model';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-threads',\n  templateUrl: './threads.component.html',\n  styleUrls: ['./threads.component.css']\n})\nexport class ThreadsComponent implements OnInit {\n  \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public threads: Contribution[];\n  logged:       boolean = false;\n  list;\n\n  constructor(\n    private route: Router,\n    private userService: UserService,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n\n        this.userService.getByEmail(this.userInfo.email).subscribe((response)=>{\n          console.log(\"user from email:\", response);\n        });\n      },\n      err =>  { this.logged = false }\n    );\n\n    // its just list data from here down\n    this.list = [\n      {\n        title: 'childless',\n        children: []\n      },\n      {\n        title: 'great grandparent',\n        children: [\n          {\n            title: 'childless grandsibiling',\n            children: []\n          },\n          {\n            title: 'grandparent',\n            children: [\n              {\n                title: 'childless sibiling',\n                children: []\n              },\n              {\n                title: 'another childless sibiling',\n                children: []\n              },\n              {\n                title: 'parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                  {\n                  title: 'another child',\n                  children: []\n                  },\n                ]\n              },\n              {\n                title: 'another parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                ]\n              },\n            ]\n          },\n          {\n            title: 'another grandparent',\n            children: [\n              {\n                title: 'parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                  {\n                    title: 'another child',\n                    children: []\n                  },\n                  {\n                    title: 'a third child',\n                    children: []\n                  },\n                  {\n                    title: 'teen mother',\n                    children: [\n                      {\n                        title: 'accident',\n                        children: []\n                      },\n                    ]\n                  },\n                ]\n              },\n            ]\n          },\n        ]\n      },\n    ];\n\n/*     this.userService.getThreads(this.userInfo.id).subscribe((response: Array<Contribution[]>) => {\n      this.threads = response[0];\n    }) */\n    // this.userService.getThreads(1).subscribe((response: Array<Contribution[]>) => {\n    //   console.log(\"threads from api\", response);\n    //   //this.threads = response[0];\n    // })\n    var contribution1: Contribution = new Contribution();\n    contribution1.id      = 1;\n    contribution1.title   = 'first contriburtion';\n    contribution1.content = 'this is the content';\n    contribution1.user_id = 1;\n    contribution1.vote    = 4;\n    contribution1.c_type  = 'ask';\n    var contribution2: Contribution = new Contribution();\n    contribution2.id      = 2;\n    contribution2.title   = 'second contriburtion';\n    contribution2.url     = 'https://www.w3schools.com/html/';\n    contribution2.user_id = 1;\n    contribution2.vote    = 10;\n    contribution2.c_type  = 'url';\n    this.threads = [contribution1, contribution2];\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToReply(id: number) {\n    // to-do\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<ul>\n  <ng-template #recursiveList let-list>\n    <li *ngFor=\"let item of list\">\n      {{item.title}}\n      <ul *ngIf=\"item.children.length > 0\">\n        <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: item.children }\"></ng-container>\n      </ul>\n    </li>\n  </ng-template>\n  <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: list }\"></ng-container>\n</ul>\n\n\n\n<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" style=\"color: #FFFFFF\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" style=\"color: #FFFFFF\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of threads; index as i; first as isFirst\">\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\">{{contribution.created_at | dateAgo}}</a><!--<a href= \"/contributions/<%= contribution.id %>\" ><%= time_ago_in_words(contribution.created_at) %> ago</a>-->\n        </div>\n      </div>\n      <div class=\"row contributioncontent\">\n        {{contribution.content}}\n      </div>\n      <div class=\"row replybutton\">\n        <div class=\"reply\" (click)=\"redirectToReply(contribution.id)\"><u>reply</u></div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.model';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\n\n@Component({\n  selector: 'app-upvoted-comments',\n  templateUrl: './upvoted-comments.component.html',\n  styleUrls: ['./upvoted-comments.component.css']\n})\nexport class UpvotedCommentsComponent implements OnInit {\n  \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public threads: Contribution[];\n  logged:       boolean = false;\n  list;\n\n  constructor(\n    private route: Router,\n    private userService: UserService,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n\n        this.userService.getByEmail(this.userInfo.email).subscribe((response)=>{\n          console.log(\"user from email:\", response);\n        });\n      },\n      err =>  { this.logged = false }\n    );\n\n    // its just list data from here down\n    this.list = [\n      {\n        title: 'childless',\n        children: []\n      },\n      {\n        title: 'great grandparent',\n        children: [\n          {\n            title: 'childless grandsibiling',\n            children: []\n          },\n          {\n            title: 'grandparent',\n            children: [\n              {\n                title: 'childless sibiling',\n                children: []\n              },\n              {\n                title: 'another childless sibiling',\n                children: []\n              },\n              {\n                title: 'parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                  {\n                  title: 'another child',\n                  children: []\n                  },\n                ]\n              },\n              {\n                title: 'another parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                ]\n              },\n            ]\n          },\n          {\n            title: 'another grandparent',\n            children: [\n              {\n                title: 'parent',\n                children: [\n                  {\n                    title: 'child',\n                    children: []\n                  },\n                  {\n                    title: 'another child',\n                    children: []\n                  },\n                  {\n                    title: 'a third child',\n                    children: []\n                  },\n                  {\n                    title: 'teen mother',\n                    children: [\n                      {\n                        title: 'accident',\n                        children: []\n                      },\n                    ]\n                  },\n                ]\n              },\n            ]\n          },\n        ]\n      },\n    ];\n\n/*     this.userService.getThreads(this.userInfo.id).subscribe((response: Array<Contribution[]>) => {\n      this.threads = response[0];\n    }) */\n    // this.userService.getThreads(1).subscribe((response: Array<Contribution[]>) => {\n    //   console.log(\"threads from api\", response);\n    //   //this.threads = response[0];\n    // })\n    var contribution1: Contribution = new Contribution();\n    contribution1.id      = 1;\n    contribution1.title   = 'first contriburtion';\n    contribution1.content = 'this is the content';\n    contribution1.user_id = 1;\n    contribution1.vote    = 4;\n    contribution1.c_type  = 'ask';\n    var contribution2: Contribution = new Contribution();\n    contribution2.id      = 2;\n    contribution2.title   = 'second contriburtion';\n    contribution2.url     = 'https://www.w3schools.com/html/';\n    contribution2.user_id = 1;\n    contribution2.vote    = 10;\n    contribution2.c_type  = 'url';\n    this.threads = [contribution1, contribution2];\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToReply(id: number) {\n    // to-do\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<ul>\n  <ng-template #recursiveList let-list>\n    <li *ngFor=\"let item of list\">\n      {{item.title}}\n      <ul *ngIf=\"item.children.length > 0\">\n        <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: item.children }\"></ng-container>\n      </ul>\n    </li>\n  </ng-template>\n  <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: list }\"></ng-container>\n</ul>\n\n\n\n<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{userInfo.name}}'s upvoted comments</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of threads; index as i; first as isFirst\">\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\">{{contribution.created_at | dateAgo}}</a><!--<a href= \"/contributions/<%= contribution.id %>\" ><%= time_ago_in_words(contribution.created_at) %> ago</a>-->\n        </div>\n      </div>\n      <div class=\"row contributioncontent\">\n        {{contribution.content}}\n      </div>\n      <div class=\"row replybutton\">\n        <div class=\"reply\" (click)=\"redirectToReply(contribution.id)\"><u>reply</u></div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/auth.service';\nimport { FirebaseUserService } from '../core/user.service';\nimport { UserService } from '../services/user/user.service';\nimport { FirebaseUserModel } from '../core/user.model';\nimport { Contribution } from '../models/contribution.model';\n\n@Component({\n  selector: 'app-upvoted-submissions',\n  templateUrl: './upvoted-submissions.component.html',\n  styleUrls: ['./upvoted-submissions.component.css']\n})\nexport class UpvotedSubmissionsComponent implements OnInit {\n    \n  public userInfo: FirebaseUserModel = new FirebaseUserModel();\n  public contributions: Contribution[];\n  logged:       boolean = false;\n\n  constructor(\n    private route: Router,\n    private authService: AuthService,\n    private firebaseUserService: FirebaseUserService,\n    private userService: UserService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.firebaseUserService.getCurrentUser().then(\n      user => { \n        console.log(\"display name\", user.displayName);\n        this.logged = true;\n        this.userInfo.name = user.displayName; \n        this.userInfo.email = user.email;\n        this.userInfo.provider = user.providerData[0].providerId;\n        console.log(\"current user: \", this.userInfo);\n        this.userService.getByEmail(this.userInfo.email).subscribe((response: FirebaseUserModel) => {\n          console.log(\"user by email\", response);\n          this.userInfo.id = response.id;\n        })\n      },\n      err =>  { \n        this.logged = false;\n        this.redirectToNews();\n      }\n    );\n    this.userService.getUpvotedSubmissions(this.userInfo.id).subscribe((response: Array<Contribution[]>) => {\n      console.log(response);\n    })\n  }\n\n  logout() {\n    this.authService.doLogout()\n    location.reload();\n  }\n\n  isVoted(id: number): boolean {\n    return false;\n  }\n\n  vote(id: number) {\n    //to-do\n  }  \n  unvote(id: number) {\n    //to-do\n  }\n  delete(id) {\n    console.log(id);\n    if(confirm(\"Are you sure?\")) {\n      // do things\n    }\n  }\n\n  redirectToNews()    { this.route.navigate(['/news']);     }\n  redirectToNewest()  { this.route.navigate(['/newest']);   }\n  redirectToThreads() { this.route.navigate(['/threads']);  }\n  redirectToAskOnly() { this.route.navigate(['/askonly']);  }\n  redirectToSubmit()  { this.route.navigate(['/submit']);   }\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        location.reload();\n      },\n      err => console.log(err)\n    )\n  }\n  //redirectToLogin()   { this.route.navigate(['/login']);    }\n  redirectToUserInfo(email: string) {\n    this.route.navigate(['/userinfo', email]);\n  }\n  redirectToContributionInfo(id: number) {\n    this.route.navigate(['/contributioninfo', id]);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged\" style=\"color:#FFFFFF\">{{userInfo.name}}'s upvoted submissions</a>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(userInfo.email)\">{{userInfo.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\" *ngFor=\"let contribution of contributions; index as i; first as isFirst\">\n    <div class=\"col-1 rank\">{{i + 1}}. </div>\n    <div class=\"col-1 vote\">\n      <span *ngIf=\"logged; else notLoggedVote\">\n        <span class=\"imageClass vote\"  *ngIf=\"isVoted(contribution.id); else notVoted\" >\n          <img src=\"../../assets/images/downvote.png\" (click)=\"vote(contribution.id)\" style=\"height:10px; width:10px;\">\n        </span>\n        <ng-template #notVoted>\n          <span class=\"imageClass vote\">\n            <img src=\"../../assets/images/upvote.png\" (click)=\"unvote(contribution.id)\" style=\"height:10px; width:10px;\">\n          </span>          \n        </ng-template>\n      </span>\n      <ng-template #notLoggedVote>\n        <span class=\"imageClass vote\">\n          <img src=\"../../assets/images/upvote.png\" (click)=\"redirectToLogin()\" style=\"height:10px; width:10px;\">\n        </span> \n      </ng-template>\n    </div>\n    <div class=\"col contributioninfo\">\n      <div class=\"row contributiontitle\">\n        <a href=\"{{contribution.url}}\">{{contribution.title}}</a>\n        <span> \n          (<a (click)=\"redirectToNews()\"><span class=\"sitestr\">{{contribution.url}}</span></a>)\n        </span>\n      </div>\n      <div class=\"row contributiondetails\">\n        <div class=\"col contributiondetailsitem\"><span class=\"score\">{{contribution.vote}} points</span></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">by</div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToUserInfo(userInfo.email)\">username</a><!-- falta nom usuari -->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a class=\"age\">{{contribution.created_at | dateAgo}}</a><!--<a href= \"/contributions/<%= contribution.id %>\" ><%= time_ago_in_words(contribution.created_at) %> ago</a>-->\n        </div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\"><a>hide</a></div>\n        <div class=\"col contributiondetailsitem\">&nbsp;|&nbsp;</div>\n        <div class=\"col contributiondetailsitem\">\n          <a (click)=\"redirectToContributionInfo(contribution.id)\">X comments</a> <!-- falta nombre de comentaris -->\n        </div>\n        <div class=\"col contributiondetailsitem\" *ngIf=\"logged\">  <!-- and no té fills -->\n          &nbsp;|&nbsp;\n          <a (click)=\"delete(contribution.id)\">delete</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport { FirebaseUserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { UserService } from '../services/user/user.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css'],\n})\nexport class UserInfoComponent implements OnInit {\n\n  public userForm:          FormGroup;\n  \n  public loggedUser:        FirebaseUserModel = new FirebaseUserModel();\n  public requestedUser:     FirebaseUserModel = new FirebaseUserModel();\n\n  public logged:            boolean           = false;\n  public sameUser:          boolean           = false;\n  public isSubmitted:       boolean           = false;\n\n  constructor (\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private firebaseUserService: FirebaseUserService,\n    public authService: AuthService,\n    private activatedRoute: ActivatedRoute\n  ) { this.loggedUser.email = localStorage.getItem('loggedUserEmail'); }\n\n  ngOnInit(): void {\n    // requested user\n    this.requestedUser.email = this.activatedRoute.snapshot.paramMap.get(\"email\");\n    this.userService.getByEmail(this.requestedUser.email).subscribe((response: FirebaseUserModel) => {\n      this.requestedUser = response;\n      console.log(\"requestedUser\", this.requestedUser);\n    });\n\n    // logged user\n    if (this.loggedUser.email != \"\") {\n      this.logged = true;\n      this.userService.getByEmail(this.loggedUser.email).subscribe((response: FirebaseUserModel) => {\n        this.loggedUser = response;\n        console.log(\"loggedUser\", this.loggedUser);\n      })\n      // same user\n      if (this.requestedUser.email == this.loggedUser.email) this.sameUser = true;\n    } else {\n      this.logged = false;\n      this.sameUser = false;\n    }\n\n    this.userForm = this.formBuilder.group({\n      about:  ['', [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.isSubmitted = true;\n    this.userService.updateUser(this.loggedUser.id, this.createUserForm(), this.loggedUser.api_key).subscribe(\n      (response: FirebaseUserModel) => {\n        location.reload();\n      }\n    )\n  }\n  private createUserForm(): string {\n    return this.userForm.value.about;\n  }\n\n  redirectToUserInfo(useremail: string)   { this.router.navigate(['/userinfo', useremail]);  }\n  redirectToContributionInfo(id: number)  { this.router.navigate(['/contributioninfo', id]); }\n  redirectToNews()                        { this.router.navigate(['/news']);                 }\n  redirectToNewest()                      { this.router.navigate(['/newest']);               }\n  redirectToThreads()                     { this.router.navigate(['/threads']);              }\n  redirectToAskOnly()                     { this.router.navigate(['/askonly']);              }\n  redirectToSubmit()                      { this.router.navigate(['/submit']);               }\n  redirectToSubmitted()                   { this.router.navigate(['/submitted'])             };\n  redirectToUpvotedSubmissions()          { this.router.navigate(['/upvotedsubmissions'])    };\n  redirectToUpvotedComments()             { this.router.navigate(['/upvotedcomments'])       };\n  redirectToLogin()   {\n    this.authService.doGoogleAuth()\n    .then(\n      res => {\n        localStorage.setItem('loggedUserEmail', res.additionalUserInfo.profile.email);\n        location.reload();\n      },\n      err => {\n        localStorage.setItem('loggedUserEmail', \"\");\n        console.log(err)\n        location.reload();\n      }\n    )\n  }\n  logout() {\n    this.authService.doLogout().then(res => {localStorage.setItem('loggedUserEmail', \"\")})\n    location.reload();\n  }\n\n\n  get formControls() { return this.userForm.controls; }\n\n}\n","<div class=\"container\">\n  <div class=\"row menu\">\n    <div class=\"col-2 principal\">\n      <span class=\"imageClass\" (click)=\"redirectToNews()\">\n        <img src=\"../../assets/images/logo.png\" style=\"border: 1px white solid; height:25px; width:25px\">\n      </span>\n      <span class=\"title\" (click)=\"redirectToNews()\"> Hacker News</span>\n    </div>\n    <div class=\"col-7 links\">\n      <a class=\"link\" (click)=\"redirectToNewest()\">news</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" *ngIf=\"logged; else notLoggedThreads\" (click)=\"redirectToThreads()\">threads</a>\n      <ng-template #notLoggedThreads>\n        <a class=\"link\" (click)=\"redirectToLogin()\">threads</a>\n      </ng-template>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">past</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">comment</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\" (click)=\"redirectToAskOnly()\">ask</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">show</a>\n      <span class=\"space\"> | </span>\n      <a class=\"link\">jobs</a>  \n      <span class=\"space\"> | </span>    \n      <a class=\"link\" *ngIf=\"logged; else notLoggedSubmit\" (click)=\"redirectToSubmit()\">submit</a>\n      <ng-template #notLoggedSubmit>\n        <a class=\"link\" (click)=\"redirectToLogin()\">submit</a>\n      </ng-template>\n    </div>\n    <div class=\"col-3 userinfo\">\n      <span class=\"link\" *ngIf=\"logged; else notLoggedUser\">\n        <a (click)=\"redirectToUserInfo(loggedUser.email)\">{{loggedUser.name}}</a> | \n        <a (click)=\"logout()\">logout</a>\n      </span>\n      <ng-template #notLoggedUser>\n        <a class=\"link\" (click)=\"redirectToLogin()\">login</a>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"row\"> </div>\n  <div class=\"row content\">\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\"><br></div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">user:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.name}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">created:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.created_at | dateAgo}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">karma:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.karma}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\">about:</div>\n        <div class=\"col fieldvalue\" *ngIf=\"sameUser; else notSameUserAbout\">\n          <textarea\n            style=\"border-radius:2em;\"\n            type=\"textarea\" \n            class=\"form-control\" \n            id=\"about\" \n            formControlName=\"about\"\n            placeholder= \"{{ loggedUser.about }}\"\n            name=\"about\"\n          ></textarea>\n        </div>\n        <ng-template #notSameUserAbout>\n          <div class=\"col fieldvalue\">{{requestedUser.about}}</div>\n        </ng-template>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\">email:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.email}}</div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\">api key:</div>\n        <div class=\"col fieldvalue\">{{requestedUser.api_key}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToSubmitted()\">submitted</u>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToThreads()\">comments</u>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToUpvotedSubmissions()\">upvoted submissions</u>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <u (click)=\"redirectToUpvotedComments()\">upvoted comments</u> \n        </div>\n      </div>\n      <div class=\"row\"><br></div>\n      <div class=\"row\" *ngIf=\"sameUser\">\n        <div class=\"col-1 fieldname\"> </div>\n        <div class=\"col fieldvalue\">\n          <button class=\"actions submitbutton\" type=\"submit\" value=\"submit\">update</button>  <!-- <%if (logged_in?) && current_user.id == @user.id %> -->        \n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-1\"> </div>\n        <div class=\"col fieldvalue\" style=\"color:#F6F6F0\">\n          Leave url blank to submit a question for discussion. If there is no url, the text (if any) will appear at the top of the thread. You can also submit via bookmarklet.\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //API_URL: 'http://glacial-atoll-33184.herokuapp.com',\n  API_URL: 'http://54.210.64.187:8080', //amazon\n  firebase: {\n    apiKey: \"AIzaSyDsGncrZFM3qxYVq7EBAuqXpGN30UvCU8k\",\n    authDomain: \"hacker-news-asw.firebaseapp.com\",\n    databaseURL: \"https://hacker-news-asw.firebaseio.com\",\n    projectId: \"hacker-news-asw\",\n    storageBucket: \"hacker-news-asw.appspot.com\",\n    messagingSenderId: \"634881005621\",\n    appId: \"1:634881005621:web:27607b9b4fdda363dc397c\",\n    measurementId: \"G-V0R0H0VRJK\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}